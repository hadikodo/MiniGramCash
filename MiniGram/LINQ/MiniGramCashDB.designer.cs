#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MiniGram.LINQ
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="MiniGramCashDB")]
	public partial class MiniGramDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTBLEXPIREDDATE(TBLEXPIREDDATE instance);
    partial void UpdateTBLEXPIREDDATE(TBLEXPIREDDATE instance);
    partial void DeleteTBLEXPIREDDATE(TBLEXPIREDDATE instance);
    partial void InsertTBLITEM(TBLITEM instance);
    partial void UpdateTBLITEM(TBLITEM instance);
    partial void DeleteTBLITEM(TBLITEM instance);
    partial void InsertTBLSUPPLIER(TBLSUPPLIER instance);
    partial void UpdateTBLSUPPLIER(TBLSUPPLIER instance);
    partial void DeleteTBLSUPPLIER(TBLSUPPLIER instance);
    partial void InsertTBLRECEIPTTYPE(TBLRECEIPTTYPE instance);
    partial void UpdateTBLRECEIPTTYPE(TBLRECEIPTTYPE instance);
    partial void DeleteTBLRECEIPTTYPE(TBLRECEIPTTYPE instance);
    partial void InsertTBLCURRENCy(TBLCURRENCy instance);
    partial void UpdateTBLCURRENCy(TBLCURRENCy instance);
    partial void DeleteTBLCURRENCy(TBLCURRENCy instance);
    partial void InsertTBLRECEIPTS_DETAIL(TBLRECEIPTS_DETAIL instance);
    partial void UpdateTBLRECEIPTS_DETAIL(TBLRECEIPTS_DETAIL instance);
    partial void DeleteTBLRECEIPTS_DETAIL(TBLRECEIPTS_DETAIL instance);
    partial void InsertTBLHOLDDETAIL(TBLHOLDDETAIL instance);
    partial void UpdateTBLHOLDDETAIL(TBLHOLDDETAIL instance);
    partial void DeleteTBLHOLDDETAIL(TBLHOLDDETAIL instance);
    partial void InsertTBLRECEIPT(TBLRECEIPT instance);
    partial void UpdateTBLRECEIPT(TBLRECEIPT instance);
    partial void DeleteTBLRECEIPT(TBLRECEIPT instance);
    partial void InsertTBLDELIVERY_RECEIPT(TBLDELIVERY_RECEIPT instance);
    partial void UpdateTBLDELIVERY_RECEIPT(TBLDELIVERY_RECEIPT instance);
    partial void DeleteTBLDELIVERY_RECEIPT(TBLDELIVERY_RECEIPT instance);
    partial void InsertTBLSTATUS(TBLSTATUS instance);
    partial void UpdateTBLSTATUS(TBLSTATUS instance);
    partial void DeleteTBLSTATUS(TBLSTATUS instance);
    partial void InsertTBLUNIT(TBLUNIT instance);
    partial void UpdateTBLUNIT(TBLUNIT instance);
    partial void DeleteTBLUNIT(TBLUNIT instance);
    partial void InsertTBLPRODUCT(TBLPRODUCT instance);
    partial void UpdateTBLPRODUCT(TBLPRODUCT instance);
    partial void DeleteTBLPRODUCT(TBLPRODUCT instance);
    partial void InsertTBLDELIVERY_RECEIPTS_DETAIL(TBLDELIVERY_RECEIPTS_DETAIL instance);
    partial void UpdateTBLDELIVERY_RECEIPTS_DETAIL(TBLDELIVERY_RECEIPTS_DETAIL instance);
    partial void DeleteTBLDELIVERY_RECEIPTS_DETAIL(TBLDELIVERY_RECEIPTS_DETAIL instance);
    #endregion
		
		public MiniGramDBDataContext() : 
				base(global::MiniGram.Properties.Settings.Default.MiniGramCashDBConnectionString4, mappingSource)
		{
			OnCreated();
		}
		
		public MiniGramDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MiniGramDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MiniGramDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MiniGramDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<TBLEXPIREDDATE> TBLEXPIREDDATEs
		{
			get
			{
				return this.GetTable<TBLEXPIREDDATE>();
			}
		}
		
		public System.Data.Linq.Table<TBLITEM> TBLITEMs
		{
			get
			{
				return this.GetTable<TBLITEM>();
			}
		}
		
		public System.Data.Linq.Table<TBLSUPPLIER> TBLSUPPLIERs
		{
			get
			{
				return this.GetTable<TBLSUPPLIER>();
			}
		}
		
		public System.Data.Linq.Table<TBLRECEIPTTYPE> TBLRECEIPTTYPEs
		{
			get
			{
				return this.GetTable<TBLRECEIPTTYPE>();
			}
		}
		
		public System.Data.Linq.Table<TBLCURRENCy> TBLCURRENCies
		{
			get
			{
				return this.GetTable<TBLCURRENCy>();
			}
		}
		
		public System.Data.Linq.Table<TBLRECEIPTS_DETAIL> TBLRECEIPTS_DETAILs
		{
			get
			{
				return this.GetTable<TBLRECEIPTS_DETAIL>();
			}
		}
		
		public System.Data.Linq.Table<TBLHOLDDETAIL> TBLHOLDDETAILs
		{
			get
			{
				return this.GetTable<TBLHOLDDETAIL>();
			}
		}
		
		public System.Data.Linq.Table<TBLRECEIPT> TBLRECEIPTs
		{
			get
			{
				return this.GetTable<TBLRECEIPT>();
			}
		}
		
		public System.Data.Linq.Table<TBLDELIVERY_RECEIPT> TBLDELIVERY_RECEIPTs
		{
			get
			{
				return this.GetTable<TBLDELIVERY_RECEIPT>();
			}
		}
		
		public System.Data.Linq.Table<TBLSTATUS> TBLSTATUS
		{
			get
			{
				return this.GetTable<TBLSTATUS>();
			}
		}
		
		public System.Data.Linq.Table<TBLUNIT> TBLUNITs
		{
			get
			{
				return this.GetTable<TBLUNIT>();
			}
		}
		
		public System.Data.Linq.Table<TBLPRODUCT> TBLPRODUCTs
		{
			get
			{
				return this.GetTable<TBLPRODUCT>();
			}
		}
		
		public System.Data.Linq.Table<TBLDELIVERY_RECEIPTS_DETAIL> TBLDELIVERY_RECEIPTS_DETAILs
		{
			get
			{
				return this.GetTable<TBLDELIVERY_RECEIPTS_DETAIL>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_addNewItem")]
		public int sp_addNewItem([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> qte, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(20)")] string unit)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), name, qte, unit);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_disableItemByID")]
		public int sp_disableItemByID([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_disableProductByID")]
		public int sp_disableProductByID([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_enableItemByID")]
		public int sp_enableItemByID([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_enableProductByID")]
		public int sp_enableProductByID([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_getLastReceiptID")]
		public ISingleResult<sp_getLastReceiptIDResult> sp_getLastReceiptID()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<sp_getLastReceiptIDResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_select_item")]
		public ISingleResult<sp_select_itemResult> sp_select_item([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string str)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), str);
			return ((ISingleResult<sp_select_itemResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_UpdateItem")]
		public int sp_UpdateItem([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> qte, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(20)")] string unit)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, name, qte, unit);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_deleteReceiptByBarcode")]
		public int sp_deleteReceiptByBarcode([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string barcode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), barcode);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_deleteReceiptDetailsByRID")]
		public int sp_deleteReceiptDetailsByRID([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_UpdateProductQuantity")]
		public int sp_UpdateProductQuantity([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> qte)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, qte);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_select_suppliers")]
		public ISingleResult<sp_select_suppliersResult> sp_select_suppliers([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string str)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), str);
			return ((ISingleResult<sp_select_suppliersResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_UpdateSupplier")]
		public int sp_UpdateSupplier([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string phone, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string email)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, name, phone, email);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_enableSupplierByID")]
		public int sp_enableSupplierByID([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_disableSupplierByID")]
		public int sp_disableSupplierByID([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_addNewSupplier")]
		public int sp_addNewSupplier([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string phone, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string email)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), name, phone, email);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_getSIDBySNAME")]
		public ISingleResult<sp_getSIDBySNAMEResult> sp_getSIDBySNAME([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string name)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), name);
			return ((ISingleResult<sp_getSIDBySNAMEResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_getSupplierByID")]
		public ISingleResult<sp_getSupplierByIDResult> sp_getSupplierByID([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((ISingleResult<sp_getSupplierByIDResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_getSupplierByNAME")]
		public ISingleResult<sp_getSupplierByNAMEResult> sp_getSupplierByNAME([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string name)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), name);
			return ((ISingleResult<sp_getSupplierByNAMEResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_getTotalOfExpiredDateQteByPID")]
		public ISingleResult<sp_getTotalOfExpiredDateQteByPIDResult> sp_getTotalOfExpiredDateQteByPID([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pid)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pid);
			return ((ISingleResult<sp_getTotalOfExpiredDateQteByPIDResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_getTotalOfExpiredDateQteByPName")]
		public ISingleResult<sp_getTotalOfExpiredDateQteByPNameResult> sp_getTotalOfExpiredDateQteByPName([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string pname)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), pname);
			return ((ISingleResult<sp_getTotalOfExpiredDateQteByPNameResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_UpdateExpiredDateQte")]
		public int sp_UpdateExpiredDateQte([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> expID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> qte)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), expID, qte);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_deleteHoldReceiptDetailsByRID")]
		public int sp_deleteHoldReceiptDetailsByRID([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> rid)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), rid);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_getBestItems")]
		public ISingleResult<sp_getBestItemsResult> sp_getBestItems([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> date)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), date);
			return ((ISingleResult<sp_getBestItemsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_getBestSuppliers")]
		public ISingleResult<sp_getBestSuppliersResult> sp_getBestSuppliers([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> date)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), date);
			return ((ISingleResult<sp_getBestSuppliersResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_getAllExpiredDateProducts")]
		public ISingleResult<sp_getAllExpiredDateProductsResult> sp_getAllExpiredDateProducts()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<sp_getAllExpiredDateProductsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_insertNewReciptDetail")]
		public int sp_insertNewReciptDetail([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> rid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> qte, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> pricedollar, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> totaldollar, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pricelbp, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> totallbp, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> totaltva, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> totaldiscount)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), rid, pid, qte, pricedollar, totaldollar, pricelbp, totallbp, totaltva, totaldiscount);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_selectReceipts")]
		public ISingleResult<sp_selectReceiptsResult> sp_selectReceipts([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string str)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), str);
			return ((ISingleResult<sp_selectReceiptsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_insertNewRecipt")]
		public int sp_insertNewRecipt([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string barcode, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> itemnb, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> totaldollar, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> totallbp, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> totaltva, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> totaldiscount, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> receiptTypeID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), barcode, itemnb, totaldollar, totallbp, totaltva, totaldiscount, receiptTypeID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_getReceiptByID")]
		public ISingleResult<sp_getReceiptByIDResult> sp_getReceiptByID([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((ISingleResult<sp_getReceiptByIDResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_getReceiptByBarcode")]
		public ISingleResult<sp_getReceiptByBarcodeResult> sp_getReceiptByBarcode([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string barcode)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), barcode);
			return ((ISingleResult<sp_getReceiptByBarcodeResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_getDailyCashByDate")]
		public ISingleResult<sp_getDailyCashByDateResult> sp_getDailyCashByDate([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> fromDate, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> toDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fromDate, toDate);
			return ((ISingleResult<sp_getDailyCashByDateResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_addNewProduct")]
		public int sp_addNewProduct([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string barcode, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> qte, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> price, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> hasQuantity, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> sid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> hasExpiredDate, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> hasTVA, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> initprice, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> secondPrice, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> discountPercentage, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> hasDiscount)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), name, barcode, qte, price, hasQuantity, sid, hasExpiredDate, hasTVA, initprice, secondPrice, discountPercentage, hasDiscount);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_UpdateProduct")]
		public int sp_UpdateProduct([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string barcode, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> qte, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> price, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> hasQuantity, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> sid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> hasExpiredDate, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> hasTVA, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> initprice, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> secondprice, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> discountPercentage, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> hasDiscount)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, name, barcode, qte, price, hasQuantity, sid, hasExpiredDate, hasTVA, initprice, secondprice, discountPercentage, hasDiscount);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_getProductsCount")]
		public ISingleResult<sp_getProductsCountResult> sp_getProductsCount([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string str)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), str);
			return ((ISingleResult<sp_getProductsCountResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_selectDeliveryReceiptsDetails")]
		public ISingleResult<sp_selectDeliveryReceiptsDetailsResult> sp_selectDeliveryReceiptsDetails([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((ISingleResult<sp_selectDeliveryReceiptsDetailsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_selectReceiptsDetailsForReportMini")]
		public ISingleResult<sp_selectReceiptsDetailsForReportMiniResult> sp_selectReceiptsDetailsForReportMini([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((ISingleResult<sp_selectReceiptsDetailsForReportMiniResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_getProductByName")]
		public ISingleResult<sp_getProductByNameResult> sp_getProductByName([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string name)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), name);
			return ((ISingleResult<sp_getProductByNameResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_selectDeliveryReceipts")]
		public ISingleResult<sp_selectDeliveryReceiptsResult> sp_selectDeliveryReceipts([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string str)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), str);
			return ((ISingleResult<sp_selectDeliveryReceiptsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_selectReceiptsDetails")]
		public ISingleResult<sp_selectReceiptsDetailsResult> sp_selectReceiptsDetails([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((ISingleResult<sp_selectReceiptsDetailsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_select_products")]
		public ISingleResult<sp_select_productsResult> sp_select_products([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string str, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> showDisabled)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), str, showDisabled);
			return ((ISingleResult<sp_select_productsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_getSalesProductCountByDate")]
		public ISingleResult<sp_getSalesProductCountByDateResult> sp_getSalesProductCountByDate([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> fromDate, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> toDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fromDate, toDate);
			return ((ISingleResult<sp_getSalesProductCountByDateResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_getProductList")]
		public ISingleResult<sp_getProductListResult> sp_getProductList()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<sp_getProductListResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_getUserDiscountCountByDay")]
		public ISingleResult<sp_getUserDiscountCountByDayResult> sp_getUserDiscountCountByDay([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string userCardNumber)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userCardNumber);
			return ((ISingleResult<sp_getUserDiscountCountByDayResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBLEXPIREDDATES")]
	public partial class TBLEXPIREDDATE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _PID;
		
		private int _Qte;
		
		private System.Nullable<System.DateTime> _ExpiredDate;
		
		private System.Nullable<System.DateTime> _dateCreated;
		
		private EntityRef<TBLPRODUCT> _TBLPRODUCT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPIDChanging(int value);
    partial void OnPIDChanged();
    partial void OnQteChanging(int value);
    partial void OnQteChanged();
    partial void OnExpiredDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExpiredDateChanged();
    partial void OndateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OndateCreatedChanged();
    #endregion
		
		public TBLEXPIREDDATE()
		{
			this._TBLPRODUCT = default(EntityRef<TBLPRODUCT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PID", DbType="Int NOT NULL")]
		public int PID
		{
			get
			{
				return this._PID;
			}
			set
			{
				if ((this._PID != value))
				{
					if (this._TBLPRODUCT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPIDChanging(value);
					this.SendPropertyChanging();
					this._PID = value;
					this.SendPropertyChanged("PID");
					this.OnPIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Qte", DbType="Int NOT NULL")]
		public int Qte
		{
			get
			{
				return this._Qte;
			}
			set
			{
				if ((this._Qte != value))
				{
					this.OnQteChanging(value);
					this.SendPropertyChanging();
					this._Qte = value;
					this.SendPropertyChanged("Qte");
					this.OnQteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpiredDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExpiredDate
		{
			get
			{
				return this._ExpiredDate;
			}
			set
			{
				if ((this._ExpiredDate != value))
				{
					this.OnExpiredDateChanging(value);
					this.SendPropertyChanging();
					this._ExpiredDate = value;
					this.SendPropertyChanged("ExpiredDate");
					this.OnExpiredDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> dateCreated
		{
			get
			{
				return this._dateCreated;
			}
			set
			{
				if ((this._dateCreated != value))
				{
					this.OndateCreatedChanging(value);
					this.SendPropertyChanging();
					this._dateCreated = value;
					this.SendPropertyChanged("dateCreated");
					this.OndateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBLPRODUCT_TBLEXPIREDDATE", Storage="_TBLPRODUCT", ThisKey="PID", OtherKey="PID", IsForeignKey=true)]
		public TBLPRODUCT TBLPRODUCT
		{
			get
			{
				return this._TBLPRODUCT.Entity;
			}
			set
			{
				TBLPRODUCT previousValue = this._TBLPRODUCT.Entity;
				if (((previousValue != value) 
							|| (this._TBLPRODUCT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TBLPRODUCT.Entity = null;
						previousValue.TBLEXPIREDDATEs.Remove(this);
					}
					this._TBLPRODUCT.Entity = value;
					if ((value != null))
					{
						value.TBLEXPIREDDATEs.Add(this);
						this._PID = value.PID;
					}
					else
					{
						this._PID = default(int);
					}
					this.SendPropertyChanged("TBLPRODUCT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBLITEMS")]
	public partial class TBLITEM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IID;
		
		private string _INAME;
		
		private System.Nullable<int> _QTE;
		
		private string _UNIT;
		
		private System.Nullable<System.DateTime> _ADD_DATE;
		
		private System.Nullable<bool> _ENABLED;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIIDChanging(int value);
    partial void OnIIDChanged();
    partial void OnINAMEChanging(string value);
    partial void OnINAMEChanged();
    partial void OnQTEChanging(System.Nullable<int> value);
    partial void OnQTEChanged();
    partial void OnUNITChanging(string value);
    partial void OnUNITChanged();
    partial void OnADD_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnADD_DATEChanged();
    partial void OnENABLEDChanging(System.Nullable<bool> value);
    partial void OnENABLEDChanged();
    #endregion
		
		public TBLITEM()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IID
		{
			get
			{
				return this._IID;
			}
			set
			{
				if ((this._IID != value))
				{
					this.OnIIDChanging(value);
					this.SendPropertyChanging();
					this._IID = value;
					this.SendPropertyChanged("IID");
					this.OnIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INAME", DbType="NVarChar(100)")]
		public string INAME
		{
			get
			{
				return this._INAME;
			}
			set
			{
				if ((this._INAME != value))
				{
					this.OnINAMEChanging(value);
					this.SendPropertyChanging();
					this._INAME = value;
					this.SendPropertyChanged("INAME");
					this.OnINAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTE", DbType="Int")]
		public System.Nullable<int> QTE
		{
			get
			{
				return this._QTE;
			}
			set
			{
				if ((this._QTE != value))
				{
					this.OnQTEChanging(value);
					this.SendPropertyChanging();
					this._QTE = value;
					this.SendPropertyChanged("QTE");
					this.OnQTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UNIT", DbType="NVarChar(20)")]
		public string UNIT
		{
			get
			{
				return this._UNIT;
			}
			set
			{
				if ((this._UNIT != value))
				{
					this.OnUNITChanging(value);
					this.SendPropertyChanging();
					this._UNIT = value;
					this.SendPropertyChanged("UNIT");
					this.OnUNITChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADD_DATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> ADD_DATE
		{
			get
			{
				return this._ADD_DATE;
			}
			set
			{
				if ((this._ADD_DATE != value))
				{
					this.OnADD_DATEChanging(value);
					this.SendPropertyChanging();
					this._ADD_DATE = value;
					this.SendPropertyChanged("ADD_DATE");
					this.OnADD_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ENABLED", DbType="Bit")]
		public System.Nullable<bool> ENABLED
		{
			get
			{
				return this._ENABLED;
			}
			set
			{
				if ((this._ENABLED != value))
				{
					this.OnENABLEDChanging(value);
					this.SendPropertyChanging();
					this._ENABLED = value;
					this.SendPropertyChanged("ENABLED");
					this.OnENABLEDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBLSUPPLIERS")]
	public partial class TBLSUPPLIER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SID;
		
		private string _SNAME;
		
		private string _SPHONE;
		
		private string _SEMAIL;
		
		private System.Nullable<System.DateTime> _ADD_DATE;
		
		private System.Nullable<bool> _ENABLED;
		
		private EntitySet<TBLPRODUCT> _TBLPRODUCTs;
		
		private EntitySet<TBLPRODUCT> _TBLPRODUCTs1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSIDChanging(int value);
    partial void OnSIDChanged();
    partial void OnSNAMEChanging(string value);
    partial void OnSNAMEChanged();
    partial void OnSPHONEChanging(string value);
    partial void OnSPHONEChanged();
    partial void OnSEMAILChanging(string value);
    partial void OnSEMAILChanged();
    partial void OnADD_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnADD_DATEChanged();
    partial void OnENABLEDChanging(System.Nullable<bool> value);
    partial void OnENABLEDChanged();
    #endregion
		
		public TBLSUPPLIER()
		{
			this._TBLPRODUCTs = new EntitySet<TBLPRODUCT>(new Action<TBLPRODUCT>(this.attach_TBLPRODUCTs), new Action<TBLPRODUCT>(this.detach_TBLPRODUCTs));
			this._TBLPRODUCTs1 = new EntitySet<TBLPRODUCT>(new Action<TBLPRODUCT>(this.attach_TBLPRODUCTs1), new Action<TBLPRODUCT>(this.detach_TBLPRODUCTs1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SID
		{
			get
			{
				return this._SID;
			}
			set
			{
				if ((this._SID != value))
				{
					this.OnSIDChanging(value);
					this.SendPropertyChanging();
					this._SID = value;
					this.SendPropertyChanged("SID");
					this.OnSIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SNAME", DbType="NVarChar(50)")]
		public string SNAME
		{
			get
			{
				return this._SNAME;
			}
			set
			{
				if ((this._SNAME != value))
				{
					this.OnSNAMEChanging(value);
					this.SendPropertyChanging();
					this._SNAME = value;
					this.SendPropertyChanged("SNAME");
					this.OnSNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SPHONE", DbType="NVarChar(50)")]
		public string SPHONE
		{
			get
			{
				return this._SPHONE;
			}
			set
			{
				if ((this._SPHONE != value))
				{
					this.OnSPHONEChanging(value);
					this.SendPropertyChanging();
					this._SPHONE = value;
					this.SendPropertyChanged("SPHONE");
					this.OnSPHONEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SEMAIL", DbType="NVarChar(50)")]
		public string SEMAIL
		{
			get
			{
				return this._SEMAIL;
			}
			set
			{
				if ((this._SEMAIL != value))
				{
					this.OnSEMAILChanging(value);
					this.SendPropertyChanging();
					this._SEMAIL = value;
					this.SendPropertyChanged("SEMAIL");
					this.OnSEMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADD_DATE", DbType="Date")]
		public System.Nullable<System.DateTime> ADD_DATE
		{
			get
			{
				return this._ADD_DATE;
			}
			set
			{
				if ((this._ADD_DATE != value))
				{
					this.OnADD_DATEChanging(value);
					this.SendPropertyChanging();
					this._ADD_DATE = value;
					this.SendPropertyChanged("ADD_DATE");
					this.OnADD_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ENABLED", DbType="Bit")]
		public System.Nullable<bool> ENABLED
		{
			get
			{
				return this._ENABLED;
			}
			set
			{
				if ((this._ENABLED != value))
				{
					this.OnENABLEDChanging(value);
					this.SendPropertyChanging();
					this._ENABLED = value;
					this.SendPropertyChanged("ENABLED");
					this.OnENABLEDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBLSUPPLIER_TBLPRODUCT", Storage="_TBLPRODUCTs", ThisKey="SID", OtherKey="SID")]
		public EntitySet<TBLPRODUCT> TBLPRODUCTs
		{
			get
			{
				return this._TBLPRODUCTs;
			}
			set
			{
				this._TBLPRODUCTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBLSUPPLIER_TBLPRODUCT1", Storage="_TBLPRODUCTs1", ThisKey="SID", OtherKey="SID")]
		public EntitySet<TBLPRODUCT> TBLPRODUCTs1
		{
			get
			{
				return this._TBLPRODUCTs1;
			}
			set
			{
				this._TBLPRODUCTs1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TBLPRODUCTs(TBLPRODUCT entity)
		{
			this.SendPropertyChanging();
			entity.TBLSUPPLIER = this;
		}
		
		private void detach_TBLPRODUCTs(TBLPRODUCT entity)
		{
			this.SendPropertyChanging();
			entity.TBLSUPPLIER = null;
		}
		
		private void attach_TBLPRODUCTs1(TBLPRODUCT entity)
		{
			this.SendPropertyChanging();
			entity.TBLSUPPLIER1 = this;
		}
		
		private void detach_TBLPRODUCTs1(TBLPRODUCT entity)
		{
			this.SendPropertyChanging();
			entity.TBLSUPPLIER1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBLRECEIPTTYPES")]
	public partial class TBLRECEIPTTYPE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TypeName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTypeNameChanging(string value);
    partial void OnTypeNameChanged();
    #endregion
		
		public TBLRECEIPTTYPE()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeName", DbType="NVarChar(50)")]
		public string TypeName
		{
			get
			{
				return this._TypeName;
			}
			set
			{
				if ((this._TypeName != value))
				{
					this.OnTypeNameChanging(value);
					this.SendPropertyChanging();
					this._TypeName = value;
					this.SendPropertyChanged("TypeName");
					this.OnTypeNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBLCURRENCIES")]
	public partial class TBLCURRENCy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _CurrencyName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCurrencyNameChanging(string value);
    partial void OnCurrencyNameChanged();
    #endregion
		
		public TBLCURRENCy()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyName", DbType="NVarChar(50)")]
		public string CurrencyName
		{
			get
			{
				return this._CurrencyName;
			}
			set
			{
				if ((this._CurrencyName != value))
				{
					this.OnCurrencyNameChanging(value);
					this.SendPropertyChanging();
					this._CurrencyName = value;
					this.SendPropertyChanged("CurrencyName");
					this.OnCurrencyNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBLRECEIPTS_DETAILS")]
	public partial class TBLRECEIPTS_DETAIL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _RID;
		
		private System.Nullable<int> _PID;
		
		private System.Nullable<int> _QTE;
		
		private System.Nullable<double> _PRICE_Dollar;
		
		private System.Nullable<int> _PRICE_LBP;
		
		private System.Nullable<double> _TOTAL_PRICEDollar;
		
		private System.Nullable<int> _TOTAL_PRICELBP;
		
		private System.Nullable<double> _TotalTVA;
		
		private System.Nullable<double> _TotalDiscount;
		
		private System.Nullable<int> _CurrencyID;
		
		private EntityRef<TBLRECEIPT> _TBLRECEIPT;
		
		private EntityRef<TBLRECEIPT> _TBLRECEIPT1;
		
		private EntityRef<TBLPRODUCT> _TBLPRODUCT;
		
		private EntityRef<TBLPRODUCT> _TBLPRODUCT1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRIDChanging(System.Nullable<int> value);
    partial void OnRIDChanged();
    partial void OnPIDChanging(System.Nullable<int> value);
    partial void OnPIDChanged();
    partial void OnQTEChanging(System.Nullable<int> value);
    partial void OnQTEChanged();
    partial void OnPRICE_DollarChanging(System.Nullable<double> value);
    partial void OnPRICE_DollarChanged();
    partial void OnPRICE_LBPChanging(System.Nullable<int> value);
    partial void OnPRICE_LBPChanged();
    partial void OnTOTAL_PRICEDollarChanging(System.Nullable<double> value);
    partial void OnTOTAL_PRICEDollarChanged();
    partial void OnTOTAL_PRICELBPChanging(System.Nullable<int> value);
    partial void OnTOTAL_PRICELBPChanged();
    partial void OnTotalTVAChanging(System.Nullable<double> value);
    partial void OnTotalTVAChanged();
    partial void OnTotalDiscountChanging(System.Nullable<double> value);
    partial void OnTotalDiscountChanged();
    partial void OnCurrencyIDChanging(System.Nullable<int> value);
    partial void OnCurrencyIDChanged();
    #endregion
		
		public TBLRECEIPTS_DETAIL()
		{
			this._TBLRECEIPT = default(EntityRef<TBLRECEIPT>);
			this._TBLRECEIPT1 = default(EntityRef<TBLRECEIPT>);
			this._TBLPRODUCT = default(EntityRef<TBLPRODUCT>);
			this._TBLPRODUCT1 = default(EntityRef<TBLPRODUCT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RID", DbType="Int")]
		public System.Nullable<int> RID
		{
			get
			{
				return this._RID;
			}
			set
			{
				if ((this._RID != value))
				{
					if ((this._TBLRECEIPT.HasLoadedOrAssignedValue || this._TBLRECEIPT1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRIDChanging(value);
					this.SendPropertyChanging();
					this._RID = value;
					this.SendPropertyChanged("RID");
					this.OnRIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PID", DbType="Int")]
		public System.Nullable<int> PID
		{
			get
			{
				return this._PID;
			}
			set
			{
				if ((this._PID != value))
				{
					if ((this._TBLPRODUCT.HasLoadedOrAssignedValue || this._TBLPRODUCT1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPIDChanging(value);
					this.SendPropertyChanging();
					this._PID = value;
					this.SendPropertyChanged("PID");
					this.OnPIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTE", DbType="Int")]
		public System.Nullable<int> QTE
		{
			get
			{
				return this._QTE;
			}
			set
			{
				if ((this._QTE != value))
				{
					this.OnQTEChanging(value);
					this.SendPropertyChanging();
					this._QTE = value;
					this.SendPropertyChanged("QTE");
					this.OnQTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRICE_Dollar", DbType="Float")]
		public System.Nullable<double> PRICE_Dollar
		{
			get
			{
				return this._PRICE_Dollar;
			}
			set
			{
				if ((this._PRICE_Dollar != value))
				{
					this.OnPRICE_DollarChanging(value);
					this.SendPropertyChanging();
					this._PRICE_Dollar = value;
					this.SendPropertyChanged("PRICE_Dollar");
					this.OnPRICE_DollarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRICE_LBP", DbType="Int")]
		public System.Nullable<int> PRICE_LBP
		{
			get
			{
				return this._PRICE_LBP;
			}
			set
			{
				if ((this._PRICE_LBP != value))
				{
					this.OnPRICE_LBPChanging(value);
					this.SendPropertyChanging();
					this._PRICE_LBP = value;
					this.SendPropertyChanged("PRICE_LBP");
					this.OnPRICE_LBPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOTAL_PRICEDollar", DbType="Float")]
		public System.Nullable<double> TOTAL_PRICEDollar
		{
			get
			{
				return this._TOTAL_PRICEDollar;
			}
			set
			{
				if ((this._TOTAL_PRICEDollar != value))
				{
					this.OnTOTAL_PRICEDollarChanging(value);
					this.SendPropertyChanging();
					this._TOTAL_PRICEDollar = value;
					this.SendPropertyChanged("TOTAL_PRICEDollar");
					this.OnTOTAL_PRICEDollarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOTAL_PRICELBP", DbType="Int")]
		public System.Nullable<int> TOTAL_PRICELBP
		{
			get
			{
				return this._TOTAL_PRICELBP;
			}
			set
			{
				if ((this._TOTAL_PRICELBP != value))
				{
					this.OnTOTAL_PRICELBPChanging(value);
					this.SendPropertyChanging();
					this._TOTAL_PRICELBP = value;
					this.SendPropertyChanged("TOTAL_PRICELBP");
					this.OnTOTAL_PRICELBPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalTVA", DbType="Float")]
		public System.Nullable<double> TotalTVA
		{
			get
			{
				return this._TotalTVA;
			}
			set
			{
				if ((this._TotalTVA != value))
				{
					this.OnTotalTVAChanging(value);
					this.SendPropertyChanging();
					this._TotalTVA = value;
					this.SendPropertyChanged("TotalTVA");
					this.OnTotalTVAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDiscount", DbType="Float")]
		public System.Nullable<double> TotalDiscount
		{
			get
			{
				return this._TotalDiscount;
			}
			set
			{
				if ((this._TotalDiscount != value))
				{
					this.OnTotalDiscountChanging(value);
					this.SendPropertyChanging();
					this._TotalDiscount = value;
					this.SendPropertyChanged("TotalDiscount");
					this.OnTotalDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyID", DbType="Int")]
		public System.Nullable<int> CurrencyID
		{
			get
			{
				return this._CurrencyID;
			}
			set
			{
				if ((this._CurrencyID != value))
				{
					this.OnCurrencyIDChanging(value);
					this.SendPropertyChanging();
					this._CurrencyID = value;
					this.SendPropertyChanged("CurrencyID");
					this.OnCurrencyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBLRECEIPT_TBLRECEIPTS_DETAIL", Storage="_TBLRECEIPT", ThisKey="RID", OtherKey="RID", IsForeignKey=true)]
		public TBLRECEIPT TBLRECEIPT
		{
			get
			{
				return this._TBLRECEIPT.Entity;
			}
			set
			{
				TBLRECEIPT previousValue = this._TBLRECEIPT.Entity;
				if (((previousValue != value) 
							|| (this._TBLRECEIPT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TBLRECEIPT.Entity = null;
						previousValue.TBLRECEIPTS_DETAILs.Remove(this);
					}
					this._TBLRECEIPT.Entity = value;
					if ((value != null))
					{
						value.TBLRECEIPTS_DETAILs.Add(this);
						this._RID = value.RID;
					}
					else
					{
						this._RID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TBLRECEIPT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBLRECEIPT_TBLRECEIPTS_DETAIL1", Storage="_TBLRECEIPT1", ThisKey="RID", OtherKey="RID", IsForeignKey=true)]
		public TBLRECEIPT TBLRECEIPT1
		{
			get
			{
				return this._TBLRECEIPT1.Entity;
			}
			set
			{
				TBLRECEIPT previousValue = this._TBLRECEIPT1.Entity;
				if (((previousValue != value) 
							|| (this._TBLRECEIPT1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TBLRECEIPT1.Entity = null;
						previousValue.TBLRECEIPTS_DETAILs1.Remove(this);
					}
					this._TBLRECEIPT1.Entity = value;
					if ((value != null))
					{
						value.TBLRECEIPTS_DETAILs1.Add(this);
						this._RID = value.RID;
					}
					else
					{
						this._RID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TBLRECEIPT1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBLPRODUCT_TBLRECEIPTS_DETAIL", Storage="_TBLPRODUCT", ThisKey="PID", OtherKey="PID", IsForeignKey=true)]
		public TBLPRODUCT TBLPRODUCT
		{
			get
			{
				return this._TBLPRODUCT.Entity;
			}
			set
			{
				TBLPRODUCT previousValue = this._TBLPRODUCT.Entity;
				if (((previousValue != value) 
							|| (this._TBLPRODUCT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TBLPRODUCT.Entity = null;
						previousValue.TBLRECEIPTS_DETAILs.Remove(this);
					}
					this._TBLPRODUCT.Entity = value;
					if ((value != null))
					{
						value.TBLRECEIPTS_DETAILs.Add(this);
						this._PID = value.PID;
					}
					else
					{
						this._PID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TBLPRODUCT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBLPRODUCT_TBLRECEIPTS_DETAIL1", Storage="_TBLPRODUCT1", ThisKey="PID", OtherKey="PID", IsForeignKey=true)]
		public TBLPRODUCT TBLPRODUCT1
		{
			get
			{
				return this._TBLPRODUCT1.Entity;
			}
			set
			{
				TBLPRODUCT previousValue = this._TBLPRODUCT1.Entity;
				if (((previousValue != value) 
							|| (this._TBLPRODUCT1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TBLPRODUCT1.Entity = null;
						previousValue.TBLRECEIPTS_DETAILs1.Remove(this);
					}
					this._TBLPRODUCT1.Entity = value;
					if ((value != null))
					{
						value.TBLRECEIPTS_DETAILs1.Add(this);
						this._PID = value.PID;
					}
					else
					{
						this._PID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TBLPRODUCT1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBLHOLDDETAILS")]
	public partial class TBLHOLDDETAIL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _RID;
		
		private System.Nullable<int> _PID;
		
		private System.Nullable<int> _QTE;
		
		private System.Nullable<double> _PRICE_Dollar;
		
		private System.Nullable<int> _PRICE_LBP;
		
		private System.Nullable<double> _TOTAL_PRICEDollar;
		
		private System.Nullable<int> _TOTAL_PRICELBP;
		
		private System.Nullable<double> _TotalTVA;
		
		private System.Nullable<double> _TotalDiscount;
		
		private System.Nullable<int> _CurrencyID;
		
		private EntityRef<TBLRECEIPT> _TBLRECEIPT;
		
		private EntityRef<TBLPRODUCT> _TBLPRODUCT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRIDChanging(System.Nullable<int> value);
    partial void OnRIDChanged();
    partial void OnPIDChanging(System.Nullable<int> value);
    partial void OnPIDChanged();
    partial void OnQTEChanging(System.Nullable<int> value);
    partial void OnQTEChanged();
    partial void OnPRICE_DollarChanging(System.Nullable<double> value);
    partial void OnPRICE_DollarChanged();
    partial void OnPRICE_LBPChanging(System.Nullable<int> value);
    partial void OnPRICE_LBPChanged();
    partial void OnTOTAL_PRICEDollarChanging(System.Nullable<double> value);
    partial void OnTOTAL_PRICEDollarChanged();
    partial void OnTOTAL_PRICELBPChanging(System.Nullable<int> value);
    partial void OnTOTAL_PRICELBPChanged();
    partial void OnTotalTVAChanging(System.Nullable<double> value);
    partial void OnTotalTVAChanged();
    partial void OnTotalDiscountChanging(System.Nullable<double> value);
    partial void OnTotalDiscountChanged();
    partial void OnCurrencyIDChanging(System.Nullable<int> value);
    partial void OnCurrencyIDChanged();
    #endregion
		
		public TBLHOLDDETAIL()
		{
			this._TBLRECEIPT = default(EntityRef<TBLRECEIPT>);
			this._TBLPRODUCT = default(EntityRef<TBLPRODUCT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RID", DbType="Int")]
		public System.Nullable<int> RID
		{
			get
			{
				return this._RID;
			}
			set
			{
				if ((this._RID != value))
				{
					if (this._TBLRECEIPT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRIDChanging(value);
					this.SendPropertyChanging();
					this._RID = value;
					this.SendPropertyChanged("RID");
					this.OnRIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PID", DbType="Int")]
		public System.Nullable<int> PID
		{
			get
			{
				return this._PID;
			}
			set
			{
				if ((this._PID != value))
				{
					if (this._TBLPRODUCT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPIDChanging(value);
					this.SendPropertyChanging();
					this._PID = value;
					this.SendPropertyChanged("PID");
					this.OnPIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTE", DbType="Int")]
		public System.Nullable<int> QTE
		{
			get
			{
				return this._QTE;
			}
			set
			{
				if ((this._QTE != value))
				{
					this.OnQTEChanging(value);
					this.SendPropertyChanging();
					this._QTE = value;
					this.SendPropertyChanged("QTE");
					this.OnQTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRICE_Dollar", DbType="Float")]
		public System.Nullable<double> PRICE_Dollar
		{
			get
			{
				return this._PRICE_Dollar;
			}
			set
			{
				if ((this._PRICE_Dollar != value))
				{
					this.OnPRICE_DollarChanging(value);
					this.SendPropertyChanging();
					this._PRICE_Dollar = value;
					this.SendPropertyChanged("PRICE_Dollar");
					this.OnPRICE_DollarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRICE_LBP", DbType="Int")]
		public System.Nullable<int> PRICE_LBP
		{
			get
			{
				return this._PRICE_LBP;
			}
			set
			{
				if ((this._PRICE_LBP != value))
				{
					this.OnPRICE_LBPChanging(value);
					this.SendPropertyChanging();
					this._PRICE_LBP = value;
					this.SendPropertyChanged("PRICE_LBP");
					this.OnPRICE_LBPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOTAL_PRICEDollar", DbType="Float")]
		public System.Nullable<double> TOTAL_PRICEDollar
		{
			get
			{
				return this._TOTAL_PRICEDollar;
			}
			set
			{
				if ((this._TOTAL_PRICEDollar != value))
				{
					this.OnTOTAL_PRICEDollarChanging(value);
					this.SendPropertyChanging();
					this._TOTAL_PRICEDollar = value;
					this.SendPropertyChanged("TOTAL_PRICEDollar");
					this.OnTOTAL_PRICEDollarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOTAL_PRICELBP", DbType="Int")]
		public System.Nullable<int> TOTAL_PRICELBP
		{
			get
			{
				return this._TOTAL_PRICELBP;
			}
			set
			{
				if ((this._TOTAL_PRICELBP != value))
				{
					this.OnTOTAL_PRICELBPChanging(value);
					this.SendPropertyChanging();
					this._TOTAL_PRICELBP = value;
					this.SendPropertyChanged("TOTAL_PRICELBP");
					this.OnTOTAL_PRICELBPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalTVA", DbType="Float")]
		public System.Nullable<double> TotalTVA
		{
			get
			{
				return this._TotalTVA;
			}
			set
			{
				if ((this._TotalTVA != value))
				{
					this.OnTotalTVAChanging(value);
					this.SendPropertyChanging();
					this._TotalTVA = value;
					this.SendPropertyChanged("TotalTVA");
					this.OnTotalTVAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDiscount", DbType="Float")]
		public System.Nullable<double> TotalDiscount
		{
			get
			{
				return this._TotalDiscount;
			}
			set
			{
				if ((this._TotalDiscount != value))
				{
					this.OnTotalDiscountChanging(value);
					this.SendPropertyChanging();
					this._TotalDiscount = value;
					this.SendPropertyChanged("TotalDiscount");
					this.OnTotalDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyID", DbType="Int")]
		public System.Nullable<int> CurrencyID
		{
			get
			{
				return this._CurrencyID;
			}
			set
			{
				if ((this._CurrencyID != value))
				{
					this.OnCurrencyIDChanging(value);
					this.SendPropertyChanging();
					this._CurrencyID = value;
					this.SendPropertyChanged("CurrencyID");
					this.OnCurrencyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBLRECEIPT_TBLHOLDDETAIL", Storage="_TBLRECEIPT", ThisKey="RID", OtherKey="RID", IsForeignKey=true)]
		public TBLRECEIPT TBLRECEIPT
		{
			get
			{
				return this._TBLRECEIPT.Entity;
			}
			set
			{
				TBLRECEIPT previousValue = this._TBLRECEIPT.Entity;
				if (((previousValue != value) 
							|| (this._TBLRECEIPT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TBLRECEIPT.Entity = null;
						previousValue.TBLHOLDDETAILs.Remove(this);
					}
					this._TBLRECEIPT.Entity = value;
					if ((value != null))
					{
						value.TBLHOLDDETAILs.Add(this);
						this._RID = value.RID;
					}
					else
					{
						this._RID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TBLRECEIPT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBLPRODUCT_TBLHOLDDETAIL", Storage="_TBLPRODUCT", ThisKey="PID", OtherKey="PID", IsForeignKey=true)]
		public TBLPRODUCT TBLPRODUCT
		{
			get
			{
				return this._TBLPRODUCT.Entity;
			}
			set
			{
				TBLPRODUCT previousValue = this._TBLPRODUCT.Entity;
				if (((previousValue != value) 
							|| (this._TBLPRODUCT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TBLPRODUCT.Entity = null;
						previousValue.TBLHOLDDETAILs.Remove(this);
					}
					this._TBLPRODUCT.Entity = value;
					if ((value != null))
					{
						value.TBLHOLDDETAILs.Add(this);
						this._PID = value.PID;
					}
					else
					{
						this._PID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TBLPRODUCT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBLRECEIPTS")]
	public partial class TBLRECEIPT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RID;
		
		private int _ReceiptTypeID;
		
		private System.Nullable<int> _RITEM_NB;
		
		private System.Nullable<double> _TOTAL_AMOUNTDollar;
		
		private System.Nullable<int> _TOTAL_AMOUNTLBP;
		
		private System.Nullable<double> _TotalTVA;
		
		private System.Nullable<double> _TotalDiscount;
		
		private System.Nullable<System.DateTime> _RDATE;
		
		private string _RBARCODE;
		
		private bool _isHold;
		
		private string _EmpCardNumber;
		
		private System.Nullable<double> _restDollar;
		
		private System.Nullable<double> _restLBP;
		
		private System.Nullable<double> _customerDollar;
		
		private System.Nullable<double> _customerLBP;
		
		private System.Nullable<int> _UserID;
		
		private EntitySet<TBLRECEIPTS_DETAIL> _TBLRECEIPTS_DETAILs;
		
		private EntitySet<TBLRECEIPTS_DETAIL> _TBLRECEIPTS_DETAILs1;
		
		private EntitySet<TBLHOLDDETAIL> _TBLHOLDDETAILs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRIDChanging(int value);
    partial void OnRIDChanged();
    partial void OnReceiptTypeIDChanging(int value);
    partial void OnReceiptTypeIDChanged();
    partial void OnRITEM_NBChanging(System.Nullable<int> value);
    partial void OnRITEM_NBChanged();
    partial void OnTOTAL_AMOUNTDollarChanging(System.Nullable<double> value);
    partial void OnTOTAL_AMOUNTDollarChanged();
    partial void OnTOTAL_AMOUNTLBPChanging(System.Nullable<int> value);
    partial void OnTOTAL_AMOUNTLBPChanged();
    partial void OnTotalTVAChanging(System.Nullable<double> value);
    partial void OnTotalTVAChanged();
    partial void OnTotalDiscountChanging(System.Nullable<double> value);
    partial void OnTotalDiscountChanged();
    partial void OnRDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnRDATEChanged();
    partial void OnRBARCODEChanging(string value);
    partial void OnRBARCODEChanged();
    partial void OnisHoldChanging(bool value);
    partial void OnisHoldChanged();
    partial void OnEmpCardNumberChanging(string value);
    partial void OnEmpCardNumberChanged();
    partial void OnrestDollarChanging(System.Nullable<double> value);
    partial void OnrestDollarChanged();
    partial void OnrestLBPChanging(System.Nullable<double> value);
    partial void OnrestLBPChanged();
    partial void OncustomerDollarChanging(System.Nullable<double> value);
    partial void OncustomerDollarChanged();
    partial void OncustomerLBPChanging(System.Nullable<double> value);
    partial void OncustomerLBPChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    #endregion
		
		public TBLRECEIPT()
		{
			this._TBLRECEIPTS_DETAILs = new EntitySet<TBLRECEIPTS_DETAIL>(new Action<TBLRECEIPTS_DETAIL>(this.attach_TBLRECEIPTS_DETAILs), new Action<TBLRECEIPTS_DETAIL>(this.detach_TBLRECEIPTS_DETAILs));
			this._TBLRECEIPTS_DETAILs1 = new EntitySet<TBLRECEIPTS_DETAIL>(new Action<TBLRECEIPTS_DETAIL>(this.attach_TBLRECEIPTS_DETAILs1), new Action<TBLRECEIPTS_DETAIL>(this.detach_TBLRECEIPTS_DETAILs1));
			this._TBLHOLDDETAILs = new EntitySet<TBLHOLDDETAIL>(new Action<TBLHOLDDETAIL>(this.attach_TBLHOLDDETAILs), new Action<TBLHOLDDETAIL>(this.detach_TBLHOLDDETAILs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RID
		{
			get
			{
				return this._RID;
			}
			set
			{
				if ((this._RID != value))
				{
					this.OnRIDChanging(value);
					this.SendPropertyChanging();
					this._RID = value;
					this.SendPropertyChanged("RID");
					this.OnRIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptTypeID", DbType="Int NOT NULL")]
		public int ReceiptTypeID
		{
			get
			{
				return this._ReceiptTypeID;
			}
			set
			{
				if ((this._ReceiptTypeID != value))
				{
					this.OnReceiptTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ReceiptTypeID = value;
					this.SendPropertyChanged("ReceiptTypeID");
					this.OnReceiptTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RITEM_NB", DbType="Int")]
		public System.Nullable<int> RITEM_NB
		{
			get
			{
				return this._RITEM_NB;
			}
			set
			{
				if ((this._RITEM_NB != value))
				{
					this.OnRITEM_NBChanging(value);
					this.SendPropertyChanging();
					this._RITEM_NB = value;
					this.SendPropertyChanged("RITEM_NB");
					this.OnRITEM_NBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOTAL_AMOUNTDollar", DbType="Float")]
		public System.Nullable<double> TOTAL_AMOUNTDollar
		{
			get
			{
				return this._TOTAL_AMOUNTDollar;
			}
			set
			{
				if ((this._TOTAL_AMOUNTDollar != value))
				{
					this.OnTOTAL_AMOUNTDollarChanging(value);
					this.SendPropertyChanging();
					this._TOTAL_AMOUNTDollar = value;
					this.SendPropertyChanged("TOTAL_AMOUNTDollar");
					this.OnTOTAL_AMOUNTDollarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOTAL_AMOUNTLBP", DbType="Int")]
		public System.Nullable<int> TOTAL_AMOUNTLBP
		{
			get
			{
				return this._TOTAL_AMOUNTLBP;
			}
			set
			{
				if ((this._TOTAL_AMOUNTLBP != value))
				{
					this.OnTOTAL_AMOUNTLBPChanging(value);
					this.SendPropertyChanging();
					this._TOTAL_AMOUNTLBP = value;
					this.SendPropertyChanged("TOTAL_AMOUNTLBP");
					this.OnTOTAL_AMOUNTLBPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalTVA", DbType="Float")]
		public System.Nullable<double> TotalTVA
		{
			get
			{
				return this._TotalTVA;
			}
			set
			{
				if ((this._TotalTVA != value))
				{
					this.OnTotalTVAChanging(value);
					this.SendPropertyChanging();
					this._TotalTVA = value;
					this.SendPropertyChanged("TotalTVA");
					this.OnTotalTVAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDiscount", DbType="Float")]
		public System.Nullable<double> TotalDiscount
		{
			get
			{
				return this._TotalDiscount;
			}
			set
			{
				if ((this._TotalDiscount != value))
				{
					this.OnTotalDiscountChanging(value);
					this.SendPropertyChanging();
					this._TotalDiscount = value;
					this.SendPropertyChanged("TotalDiscount");
					this.OnTotalDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> RDATE
		{
			get
			{
				return this._RDATE;
			}
			set
			{
				if ((this._RDATE != value))
				{
					this.OnRDATEChanging(value);
					this.SendPropertyChanging();
					this._RDATE = value;
					this.SendPropertyChanged("RDATE");
					this.OnRDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RBARCODE", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string RBARCODE
		{
			get
			{
				return this._RBARCODE;
			}
			set
			{
				if ((this._RBARCODE != value))
				{
					this.OnRBARCODEChanging(value);
					this.SendPropertyChanging();
					this._RBARCODE = value;
					this.SendPropertyChanged("RBARCODE");
					this.OnRBARCODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isHold", DbType="Bit NOT NULL")]
		public bool isHold
		{
			get
			{
				return this._isHold;
			}
			set
			{
				if ((this._isHold != value))
				{
					this.OnisHoldChanging(value);
					this.SendPropertyChanging();
					this._isHold = value;
					this.SendPropertyChanged("isHold");
					this.OnisHoldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpCardNumber", DbType="NVarChar(50)")]
		public string EmpCardNumber
		{
			get
			{
				return this._EmpCardNumber;
			}
			set
			{
				if ((this._EmpCardNumber != value))
				{
					this.OnEmpCardNumberChanging(value);
					this.SendPropertyChanging();
					this._EmpCardNumber = value;
					this.SendPropertyChanged("EmpCardNumber");
					this.OnEmpCardNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_restDollar", DbType="Float")]
		public System.Nullable<double> restDollar
		{
			get
			{
				return this._restDollar;
			}
			set
			{
				if ((this._restDollar != value))
				{
					this.OnrestDollarChanging(value);
					this.SendPropertyChanging();
					this._restDollar = value;
					this.SendPropertyChanged("restDollar");
					this.OnrestDollarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_restLBP", DbType="Float")]
		public System.Nullable<double> restLBP
		{
			get
			{
				return this._restLBP;
			}
			set
			{
				if ((this._restLBP != value))
				{
					this.OnrestLBPChanging(value);
					this.SendPropertyChanging();
					this._restLBP = value;
					this.SendPropertyChanged("restLBP");
					this.OnrestLBPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerDollar", DbType="Float")]
		public System.Nullable<double> customerDollar
		{
			get
			{
				return this._customerDollar;
			}
			set
			{
				if ((this._customerDollar != value))
				{
					this.OncustomerDollarChanging(value);
					this.SendPropertyChanging();
					this._customerDollar = value;
					this.SendPropertyChanged("customerDollar");
					this.OncustomerDollarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerLBP", DbType="Float")]
		public System.Nullable<double> customerLBP
		{
			get
			{
				return this._customerLBP;
			}
			set
			{
				if ((this._customerLBP != value))
				{
					this.OncustomerLBPChanging(value);
					this.SendPropertyChanging();
					this._customerLBP = value;
					this.SendPropertyChanged("customerLBP");
					this.OncustomerLBPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBLRECEIPT_TBLRECEIPTS_DETAIL", Storage="_TBLRECEIPTS_DETAILs", ThisKey="RID", OtherKey="RID")]
		public EntitySet<TBLRECEIPTS_DETAIL> TBLRECEIPTS_DETAILs
		{
			get
			{
				return this._TBLRECEIPTS_DETAILs;
			}
			set
			{
				this._TBLRECEIPTS_DETAILs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBLRECEIPT_TBLRECEIPTS_DETAIL1", Storage="_TBLRECEIPTS_DETAILs1", ThisKey="RID", OtherKey="RID")]
		public EntitySet<TBLRECEIPTS_DETAIL> TBLRECEIPTS_DETAILs1
		{
			get
			{
				return this._TBLRECEIPTS_DETAILs1;
			}
			set
			{
				this._TBLRECEIPTS_DETAILs1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBLRECEIPT_TBLHOLDDETAIL", Storage="_TBLHOLDDETAILs", ThisKey="RID", OtherKey="RID")]
		public EntitySet<TBLHOLDDETAIL> TBLHOLDDETAILs
		{
			get
			{
				return this._TBLHOLDDETAILs;
			}
			set
			{
				this._TBLHOLDDETAILs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TBLRECEIPTS_DETAILs(TBLRECEIPTS_DETAIL entity)
		{
			this.SendPropertyChanging();
			entity.TBLRECEIPT = this;
		}
		
		private void detach_TBLRECEIPTS_DETAILs(TBLRECEIPTS_DETAIL entity)
		{
			this.SendPropertyChanging();
			entity.TBLRECEIPT = null;
		}
		
		private void attach_TBLRECEIPTS_DETAILs1(TBLRECEIPTS_DETAIL entity)
		{
			this.SendPropertyChanging();
			entity.TBLRECEIPT1 = this;
		}
		
		private void detach_TBLRECEIPTS_DETAILs1(TBLRECEIPTS_DETAIL entity)
		{
			this.SendPropertyChanging();
			entity.TBLRECEIPT1 = null;
		}
		
		private void attach_TBLHOLDDETAILs(TBLHOLDDETAIL entity)
		{
			this.SendPropertyChanging();
			entity.TBLRECEIPT = this;
		}
		
		private void detach_TBLHOLDDETAILs(TBLHOLDDETAIL entity)
		{
			this.SendPropertyChanging();
			entity.TBLRECEIPT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBLDELIVERY_RECEIPTS")]
	public partial class TBLDELIVERY_RECEIPT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ReceiptBarcode;
		
		private string _RefID;
		
		private System.Nullable<int> _ReceiptTypeID;
		
		private System.Nullable<int> _SupplierID;
		
		private System.Nullable<System.DateTime> _ReceiptDate;
		
		private System.Nullable<int> _TotalQuantity;
		
		private System.Nullable<double> _TotalDiscount;
		
		private System.Nullable<int> _TotalLBP;
		
		private System.Nullable<double> _TotalDollar;
		
		private System.Nullable<double> _TotalTVA;
		
		private System.Nullable<int> _CurrencyID;
		
		private System.Nullable<int> _UserID;
		
		private int _StatusID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnReceiptBarcodeChanging(string value);
    partial void OnReceiptBarcodeChanged();
    partial void OnRefIDChanging(string value);
    partial void OnRefIDChanged();
    partial void OnReceiptTypeIDChanging(System.Nullable<int> value);
    partial void OnReceiptTypeIDChanged();
    partial void OnSupplierIDChanging(System.Nullable<int> value);
    partial void OnSupplierIDChanged();
    partial void OnReceiptDateChanging(System.Nullable<System.DateTime> value);
    partial void OnReceiptDateChanged();
    partial void OnTotalQuantityChanging(System.Nullable<int> value);
    partial void OnTotalQuantityChanged();
    partial void OnTotalDiscountChanging(System.Nullable<double> value);
    partial void OnTotalDiscountChanged();
    partial void OnTotalLBPChanging(System.Nullable<int> value);
    partial void OnTotalLBPChanged();
    partial void OnTotalDollarChanging(System.Nullable<double> value);
    partial void OnTotalDollarChanged();
    partial void OnTotalTVAChanging(System.Nullable<double> value);
    partial void OnTotalTVAChanged();
    partial void OnCurrencyIDChanging(System.Nullable<int> value);
    partial void OnCurrencyIDChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnStatusIDChanging(int value);
    partial void OnStatusIDChanged();
    #endregion
		
		public TBLDELIVERY_RECEIPT()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptBarcode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ReceiptBarcode
		{
			get
			{
				return this._ReceiptBarcode;
			}
			set
			{
				if ((this._ReceiptBarcode != value))
				{
					this.OnReceiptBarcodeChanging(value);
					this.SendPropertyChanging();
					this._ReceiptBarcode = value;
					this.SendPropertyChanged("ReceiptBarcode");
					this.OnReceiptBarcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RefID
		{
			get
			{
				return this._RefID;
			}
			set
			{
				if ((this._RefID != value))
				{
					this.OnRefIDChanging(value);
					this.SendPropertyChanging();
					this._RefID = value;
					this.SendPropertyChanged("RefID");
					this.OnRefIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptTypeID", DbType="Int")]
		public System.Nullable<int> ReceiptTypeID
		{
			get
			{
				return this._ReceiptTypeID;
			}
			set
			{
				if ((this._ReceiptTypeID != value))
				{
					this.OnReceiptTypeIDChanging(value);
					this.SendPropertyChanging();
					this._ReceiptTypeID = value;
					this.SendPropertyChanged("ReceiptTypeID");
					this.OnReceiptTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierID", DbType="Int")]
		public System.Nullable<int> SupplierID
		{
			get
			{
				return this._SupplierID;
			}
			set
			{
				if ((this._SupplierID != value))
				{
					this.OnSupplierIDChanging(value);
					this.SendPropertyChanging();
					this._SupplierID = value;
					this.SendPropertyChanged("SupplierID");
					this.OnSupplierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ReceiptDate
		{
			get
			{
				return this._ReceiptDate;
			}
			set
			{
				if ((this._ReceiptDate != value))
				{
					this.OnReceiptDateChanging(value);
					this.SendPropertyChanging();
					this._ReceiptDate = value;
					this.SendPropertyChanged("ReceiptDate");
					this.OnReceiptDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalQuantity", DbType="Int")]
		public System.Nullable<int> TotalQuantity
		{
			get
			{
				return this._TotalQuantity;
			}
			set
			{
				if ((this._TotalQuantity != value))
				{
					this.OnTotalQuantityChanging(value);
					this.SendPropertyChanging();
					this._TotalQuantity = value;
					this.SendPropertyChanged("TotalQuantity");
					this.OnTotalQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDiscount", DbType="Float")]
		public System.Nullable<double> TotalDiscount
		{
			get
			{
				return this._TotalDiscount;
			}
			set
			{
				if ((this._TotalDiscount != value))
				{
					this.OnTotalDiscountChanging(value);
					this.SendPropertyChanging();
					this._TotalDiscount = value;
					this.SendPropertyChanged("TotalDiscount");
					this.OnTotalDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalLBP", DbType="Int")]
		public System.Nullable<int> TotalLBP
		{
			get
			{
				return this._TotalLBP;
			}
			set
			{
				if ((this._TotalLBP != value))
				{
					this.OnTotalLBPChanging(value);
					this.SendPropertyChanging();
					this._TotalLBP = value;
					this.SendPropertyChanged("TotalLBP");
					this.OnTotalLBPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDollar", DbType="Float")]
		public System.Nullable<double> TotalDollar
		{
			get
			{
				return this._TotalDollar;
			}
			set
			{
				if ((this._TotalDollar != value))
				{
					this.OnTotalDollarChanging(value);
					this.SendPropertyChanging();
					this._TotalDollar = value;
					this.SendPropertyChanged("TotalDollar");
					this.OnTotalDollarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalTVA", DbType="Float")]
		public System.Nullable<double> TotalTVA
		{
			get
			{
				return this._TotalTVA;
			}
			set
			{
				if ((this._TotalTVA != value))
				{
					this.OnTotalTVAChanging(value);
					this.SendPropertyChanging();
					this._TotalTVA = value;
					this.SendPropertyChanged("TotalTVA");
					this.OnTotalTVAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyID", DbType="Int")]
		public System.Nullable<int> CurrencyID
		{
			get
			{
				return this._CurrencyID;
			}
			set
			{
				if ((this._CurrencyID != value))
				{
					this.OnCurrencyIDChanging(value);
					this.SendPropertyChanging();
					this._CurrencyID = value;
					this.SendPropertyChanged("CurrencyID");
					this.OnCurrencyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", DbType="Int NOT NULL")]
		public int StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					this.OnStatusIDChanging(value);
					this.SendPropertyChanging();
					this._StatusID = value;
					this.SendPropertyChanged("StatusID");
					this.OnStatusIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBLSTATUS")]
	public partial class TBLSTATUS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _StatusName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnStatusNameChanging(string value);
    partial void OnStatusNameChanged();
    #endregion
		
		public TBLSTATUS()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusName", DbType="NVarChar(50)")]
		public string StatusName
		{
			get
			{
				return this._StatusName;
			}
			set
			{
				if ((this._StatusName != value))
				{
					this.OnStatusNameChanging(value);
					this.SendPropertyChanging();
					this._StatusName = value;
					this.SendPropertyChanged("StatusName");
					this.OnStatusNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBLUNITS")]
	public partial class TBLUNIT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _UnitName;
		
		private bool _Enabled;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUnitNameChanging(string value);
    partial void OnUnitNameChanged();
    partial void OnEnabledChanging(bool value);
    partial void OnEnabledChanged();
    #endregion
		
		public TBLUNIT()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitName", DbType="NVarChar(50)")]
		public string UnitName
		{
			get
			{
				return this._UnitName;
			}
			set
			{
				if ((this._UnitName != value))
				{
					this.OnUnitNameChanging(value);
					this.SendPropertyChanging();
					this._UnitName = value;
					this.SendPropertyChanged("UnitName");
					this.OnUnitNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enabled", DbType="Bit NOT NULL")]
		public bool Enabled
		{
			get
			{
				return this._Enabled;
			}
			set
			{
				if ((this._Enabled != value))
				{
					this.OnEnabledChanging(value);
					this.SendPropertyChanging();
					this._Enabled = value;
					this.SendPropertyChanged("Enabled");
					this.OnEnabledChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBLPRODUCTS")]
	public partial class TBLPRODUCT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PID;
		
		private string _PNAME;
		
		private int _QTE;
		
		private System.Nullable<double> _PRICE;
		
		private System.Nullable<System.DateTime> _ADD_DATE;
		
		private System.Nullable<bool> _ENABLED;
		
		private System.Nullable<bool> _HasQuantity;
		
		private string _BARCODE;
		
		private System.Nullable<int> _SID;
		
		private System.Nullable<int> _HasExpiredDate;
		
		private bool _HasTVA;
		
		private System.Nullable<double> _InitPrice;
		
		private System.Nullable<double> _SecondaryPrice;
		
		private System.Nullable<int> _DiscountPercentage;
		
		private bool _HasDiscount;
		
		private int _CurrencyID;
		
		private bool _HasUnit;
		
		private System.Nullable<int> _UnitID;
		
		private bool _hasSellProfitPercentage;
		
		private System.Nullable<int> _SellProfitPercentage;
		
		private bool _hasEmpProfitPercentage;
		
		private System.Nullable<int> _EmpProfitPercentage;
		
		private EntitySet<TBLEXPIREDDATE> _TBLEXPIREDDATEs;
		
		private EntitySet<TBLRECEIPTS_DETAIL> _TBLRECEIPTS_DETAILs;
		
		private EntitySet<TBLRECEIPTS_DETAIL> _TBLRECEIPTS_DETAILs1;
		
		private EntitySet<TBLHOLDDETAIL> _TBLHOLDDETAILs;
		
		private EntityRef<TBLSUPPLIER> _TBLSUPPLIER;
		
		private EntityRef<TBLSUPPLIER> _TBLSUPPLIER1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPIDChanging(int value);
    partial void OnPIDChanged();
    partial void OnPNAMEChanging(string value);
    partial void OnPNAMEChanged();
    partial void OnQTEChanging(int value);
    partial void OnQTEChanged();
    partial void OnPRICEChanging(System.Nullable<double> value);
    partial void OnPRICEChanged();
    partial void OnADD_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnADD_DATEChanged();
    partial void OnENABLEDChanging(System.Nullable<bool> value);
    partial void OnENABLEDChanged();
    partial void OnHasQuantityChanging(System.Nullable<bool> value);
    partial void OnHasQuantityChanged();
    partial void OnBARCODEChanging(string value);
    partial void OnBARCODEChanged();
    partial void OnSIDChanging(System.Nullable<int> value);
    partial void OnSIDChanged();
    partial void OnHasExpiredDateChanging(System.Nullable<int> value);
    partial void OnHasExpiredDateChanged();
    partial void OnHasTVAChanging(bool value);
    partial void OnHasTVAChanged();
    partial void OnInitPriceChanging(System.Nullable<double> value);
    partial void OnInitPriceChanged();
    partial void OnSecondaryPriceChanging(System.Nullable<double> value);
    partial void OnSecondaryPriceChanged();
    partial void OnDiscountPercentageChanging(System.Nullable<int> value);
    partial void OnDiscountPercentageChanged();
    partial void OnHasDiscountChanging(bool value);
    partial void OnHasDiscountChanged();
    partial void OnCurrencyIDChanging(int value);
    partial void OnCurrencyIDChanged();
    partial void OnHasUnitChanging(bool value);
    partial void OnHasUnitChanged();
    partial void OnUnitIDChanging(System.Nullable<int> value);
    partial void OnUnitIDChanged();
    partial void OnhasSellProfitPercentageChanging(bool value);
    partial void OnhasSellProfitPercentageChanged();
    partial void OnSellProfitPercentageChanging(System.Nullable<int> value);
    partial void OnSellProfitPercentageChanged();
    partial void OnhasEmpProfitPercentageChanging(bool value);
    partial void OnhasEmpProfitPercentageChanged();
    partial void OnEmpProfitPercentageChanging(System.Nullable<int> value);
    partial void OnEmpProfitPercentageChanged();
    #endregion
		
		public TBLPRODUCT()
		{
			this._TBLEXPIREDDATEs = new EntitySet<TBLEXPIREDDATE>(new Action<TBLEXPIREDDATE>(this.attach_TBLEXPIREDDATEs), new Action<TBLEXPIREDDATE>(this.detach_TBLEXPIREDDATEs));
			this._TBLRECEIPTS_DETAILs = new EntitySet<TBLRECEIPTS_DETAIL>(new Action<TBLRECEIPTS_DETAIL>(this.attach_TBLRECEIPTS_DETAILs), new Action<TBLRECEIPTS_DETAIL>(this.detach_TBLRECEIPTS_DETAILs));
			this._TBLRECEIPTS_DETAILs1 = new EntitySet<TBLRECEIPTS_DETAIL>(new Action<TBLRECEIPTS_DETAIL>(this.attach_TBLRECEIPTS_DETAILs1), new Action<TBLRECEIPTS_DETAIL>(this.detach_TBLRECEIPTS_DETAILs1));
			this._TBLHOLDDETAILs = new EntitySet<TBLHOLDDETAIL>(new Action<TBLHOLDDETAIL>(this.attach_TBLHOLDDETAILs), new Action<TBLHOLDDETAIL>(this.detach_TBLHOLDDETAILs));
			this._TBLSUPPLIER = default(EntityRef<TBLSUPPLIER>);
			this._TBLSUPPLIER1 = default(EntityRef<TBLSUPPLIER>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PID
		{
			get
			{
				return this._PID;
			}
			set
			{
				if ((this._PID != value))
				{
					this.OnPIDChanging(value);
					this.SendPropertyChanging();
					this._PID = value;
					this.SendPropertyChanged("PID");
					this.OnPIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PNAME", DbType="NVarChar(MAX)")]
		public string PNAME
		{
			get
			{
				return this._PNAME;
			}
			set
			{
				if ((this._PNAME != value))
				{
					this.OnPNAMEChanging(value);
					this.SendPropertyChanging();
					this._PNAME = value;
					this.SendPropertyChanged("PNAME");
					this.OnPNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTE", DbType="Int NOT NULL")]
		public int QTE
		{
			get
			{
				return this._QTE;
			}
			set
			{
				if ((this._QTE != value))
				{
					this.OnQTEChanging(value);
					this.SendPropertyChanging();
					this._QTE = value;
					this.SendPropertyChanged("QTE");
					this.OnQTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRICE", DbType="Float")]
		public System.Nullable<double> PRICE
		{
			get
			{
				return this._PRICE;
			}
			set
			{
				if ((this._PRICE != value))
				{
					this.OnPRICEChanging(value);
					this.SendPropertyChanging();
					this._PRICE = value;
					this.SendPropertyChanged("PRICE");
					this.OnPRICEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADD_DATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> ADD_DATE
		{
			get
			{
				return this._ADD_DATE;
			}
			set
			{
				if ((this._ADD_DATE != value))
				{
					this.OnADD_DATEChanging(value);
					this.SendPropertyChanging();
					this._ADD_DATE = value;
					this.SendPropertyChanged("ADD_DATE");
					this.OnADD_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ENABLED", DbType="Bit")]
		public System.Nullable<bool> ENABLED
		{
			get
			{
				return this._ENABLED;
			}
			set
			{
				if ((this._ENABLED != value))
				{
					this.OnENABLEDChanging(value);
					this.SendPropertyChanging();
					this._ENABLED = value;
					this.SendPropertyChanged("ENABLED");
					this.OnENABLEDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasQuantity", DbType="Bit")]
		public System.Nullable<bool> HasQuantity
		{
			get
			{
				return this._HasQuantity;
			}
			set
			{
				if ((this._HasQuantity != value))
				{
					this.OnHasQuantityChanging(value);
					this.SendPropertyChanging();
					this._HasQuantity = value;
					this.SendPropertyChanged("HasQuantity");
					this.OnHasQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BARCODE", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string BARCODE
		{
			get
			{
				return this._BARCODE;
			}
			set
			{
				if ((this._BARCODE != value))
				{
					this.OnBARCODEChanging(value);
					this.SendPropertyChanging();
					this._BARCODE = value;
					this.SendPropertyChanged("BARCODE");
					this.OnBARCODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SID", DbType="Int")]
		public System.Nullable<int> SID
		{
			get
			{
				return this._SID;
			}
			set
			{
				if ((this._SID != value))
				{
					if ((this._TBLSUPPLIER.HasLoadedOrAssignedValue || this._TBLSUPPLIER1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSIDChanging(value);
					this.SendPropertyChanging();
					this._SID = value;
					this.SendPropertyChanged("SID");
					this.OnSIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasExpiredDate", DbType="Int")]
		public System.Nullable<int> HasExpiredDate
		{
			get
			{
				return this._HasExpiredDate;
			}
			set
			{
				if ((this._HasExpiredDate != value))
				{
					this.OnHasExpiredDateChanging(value);
					this.SendPropertyChanging();
					this._HasExpiredDate = value;
					this.SendPropertyChanged("HasExpiredDate");
					this.OnHasExpiredDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasTVA", DbType="Bit NOT NULL")]
		public bool HasTVA
		{
			get
			{
				return this._HasTVA;
			}
			set
			{
				if ((this._HasTVA != value))
				{
					this.OnHasTVAChanging(value);
					this.SendPropertyChanging();
					this._HasTVA = value;
					this.SendPropertyChanged("HasTVA");
					this.OnHasTVAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InitPrice", DbType="Float")]
		public System.Nullable<double> InitPrice
		{
			get
			{
				return this._InitPrice;
			}
			set
			{
				if ((this._InitPrice != value))
				{
					this.OnInitPriceChanging(value);
					this.SendPropertyChanging();
					this._InitPrice = value;
					this.SendPropertyChanged("InitPrice");
					this.OnInitPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondaryPrice", DbType="Float")]
		public System.Nullable<double> SecondaryPrice
		{
			get
			{
				return this._SecondaryPrice;
			}
			set
			{
				if ((this._SecondaryPrice != value))
				{
					this.OnSecondaryPriceChanging(value);
					this.SendPropertyChanging();
					this._SecondaryPrice = value;
					this.SendPropertyChanged("SecondaryPrice");
					this.OnSecondaryPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountPercentage", DbType="Int")]
		public System.Nullable<int> DiscountPercentage
		{
			get
			{
				return this._DiscountPercentage;
			}
			set
			{
				if ((this._DiscountPercentage != value))
				{
					this.OnDiscountPercentageChanging(value);
					this.SendPropertyChanging();
					this._DiscountPercentage = value;
					this.SendPropertyChanged("DiscountPercentage");
					this.OnDiscountPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasDiscount", DbType="Bit NOT NULL")]
		public bool HasDiscount
		{
			get
			{
				return this._HasDiscount;
			}
			set
			{
				if ((this._HasDiscount != value))
				{
					this.OnHasDiscountChanging(value);
					this.SendPropertyChanging();
					this._HasDiscount = value;
					this.SendPropertyChanged("HasDiscount");
					this.OnHasDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyID", DbType="Int NOT NULL")]
		public int CurrencyID
		{
			get
			{
				return this._CurrencyID;
			}
			set
			{
				if ((this._CurrencyID != value))
				{
					this.OnCurrencyIDChanging(value);
					this.SendPropertyChanging();
					this._CurrencyID = value;
					this.SendPropertyChanged("CurrencyID");
					this.OnCurrencyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasUnit", DbType="Bit NOT NULL")]
		public bool HasUnit
		{
			get
			{
				return this._HasUnit;
			}
			set
			{
				if ((this._HasUnit != value))
				{
					this.OnHasUnitChanging(value);
					this.SendPropertyChanging();
					this._HasUnit = value;
					this.SendPropertyChanged("HasUnit");
					this.OnHasUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitID", DbType="Int")]
		public System.Nullable<int> UnitID
		{
			get
			{
				return this._UnitID;
			}
			set
			{
				if ((this._UnitID != value))
				{
					this.OnUnitIDChanging(value);
					this.SendPropertyChanging();
					this._UnitID = value;
					this.SendPropertyChanged("UnitID");
					this.OnUnitIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hasSellProfitPercentage", DbType="Bit NOT NULL")]
		public bool hasSellProfitPercentage
		{
			get
			{
				return this._hasSellProfitPercentage;
			}
			set
			{
				if ((this._hasSellProfitPercentage != value))
				{
					this.OnhasSellProfitPercentageChanging(value);
					this.SendPropertyChanging();
					this._hasSellProfitPercentage = value;
					this.SendPropertyChanged("hasSellProfitPercentage");
					this.OnhasSellProfitPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellProfitPercentage", DbType="Int")]
		public System.Nullable<int> SellProfitPercentage
		{
			get
			{
				return this._SellProfitPercentage;
			}
			set
			{
				if ((this._SellProfitPercentage != value))
				{
					this.OnSellProfitPercentageChanging(value);
					this.SendPropertyChanging();
					this._SellProfitPercentage = value;
					this.SendPropertyChanged("SellProfitPercentage");
					this.OnSellProfitPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hasEmpProfitPercentage", DbType="Bit NOT NULL")]
		public bool hasEmpProfitPercentage
		{
			get
			{
				return this._hasEmpProfitPercentage;
			}
			set
			{
				if ((this._hasEmpProfitPercentage != value))
				{
					this.OnhasEmpProfitPercentageChanging(value);
					this.SendPropertyChanging();
					this._hasEmpProfitPercentage = value;
					this.SendPropertyChanged("hasEmpProfitPercentage");
					this.OnhasEmpProfitPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpProfitPercentage", DbType="Int")]
		public System.Nullable<int> EmpProfitPercentage
		{
			get
			{
				return this._EmpProfitPercentage;
			}
			set
			{
				if ((this._EmpProfitPercentage != value))
				{
					this.OnEmpProfitPercentageChanging(value);
					this.SendPropertyChanging();
					this._EmpProfitPercentage = value;
					this.SendPropertyChanged("EmpProfitPercentage");
					this.OnEmpProfitPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBLPRODUCT_TBLEXPIREDDATE", Storage="_TBLEXPIREDDATEs", ThisKey="PID", OtherKey="PID")]
		public EntitySet<TBLEXPIREDDATE> TBLEXPIREDDATEs
		{
			get
			{
				return this._TBLEXPIREDDATEs;
			}
			set
			{
				this._TBLEXPIREDDATEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBLPRODUCT_TBLRECEIPTS_DETAIL", Storage="_TBLRECEIPTS_DETAILs", ThisKey="PID", OtherKey="PID")]
		public EntitySet<TBLRECEIPTS_DETAIL> TBLRECEIPTS_DETAILs
		{
			get
			{
				return this._TBLRECEIPTS_DETAILs;
			}
			set
			{
				this._TBLRECEIPTS_DETAILs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBLPRODUCT_TBLRECEIPTS_DETAIL1", Storage="_TBLRECEIPTS_DETAILs1", ThisKey="PID", OtherKey="PID")]
		public EntitySet<TBLRECEIPTS_DETAIL> TBLRECEIPTS_DETAILs1
		{
			get
			{
				return this._TBLRECEIPTS_DETAILs1;
			}
			set
			{
				this._TBLRECEIPTS_DETAILs1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBLPRODUCT_TBLHOLDDETAIL", Storage="_TBLHOLDDETAILs", ThisKey="PID", OtherKey="PID")]
		public EntitySet<TBLHOLDDETAIL> TBLHOLDDETAILs
		{
			get
			{
				return this._TBLHOLDDETAILs;
			}
			set
			{
				this._TBLHOLDDETAILs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBLSUPPLIER_TBLPRODUCT", Storage="_TBLSUPPLIER", ThisKey="SID", OtherKey="SID", IsForeignKey=true)]
		public TBLSUPPLIER TBLSUPPLIER
		{
			get
			{
				return this._TBLSUPPLIER.Entity;
			}
			set
			{
				TBLSUPPLIER previousValue = this._TBLSUPPLIER.Entity;
				if (((previousValue != value) 
							|| (this._TBLSUPPLIER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TBLSUPPLIER.Entity = null;
						previousValue.TBLPRODUCTs.Remove(this);
					}
					this._TBLSUPPLIER.Entity = value;
					if ((value != null))
					{
						value.TBLPRODUCTs.Add(this);
						this._SID = value.SID;
					}
					else
					{
						this._SID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TBLSUPPLIER");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBLSUPPLIER_TBLPRODUCT1", Storage="_TBLSUPPLIER1", ThisKey="SID", OtherKey="SID", IsForeignKey=true)]
		public TBLSUPPLIER TBLSUPPLIER1
		{
			get
			{
				return this._TBLSUPPLIER1.Entity;
			}
			set
			{
				TBLSUPPLIER previousValue = this._TBLSUPPLIER1.Entity;
				if (((previousValue != value) 
							|| (this._TBLSUPPLIER1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TBLSUPPLIER1.Entity = null;
						previousValue.TBLPRODUCTs1.Remove(this);
					}
					this._TBLSUPPLIER1.Entity = value;
					if ((value != null))
					{
						value.TBLPRODUCTs1.Add(this);
						this._SID = value.SID;
					}
					else
					{
						this._SID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TBLSUPPLIER1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TBLEXPIREDDATEs(TBLEXPIREDDATE entity)
		{
			this.SendPropertyChanging();
			entity.TBLPRODUCT = this;
		}
		
		private void detach_TBLEXPIREDDATEs(TBLEXPIREDDATE entity)
		{
			this.SendPropertyChanging();
			entity.TBLPRODUCT = null;
		}
		
		private void attach_TBLRECEIPTS_DETAILs(TBLRECEIPTS_DETAIL entity)
		{
			this.SendPropertyChanging();
			entity.TBLPRODUCT = this;
		}
		
		private void detach_TBLRECEIPTS_DETAILs(TBLRECEIPTS_DETAIL entity)
		{
			this.SendPropertyChanging();
			entity.TBLPRODUCT = null;
		}
		
		private void attach_TBLRECEIPTS_DETAILs1(TBLRECEIPTS_DETAIL entity)
		{
			this.SendPropertyChanging();
			entity.TBLPRODUCT1 = this;
		}
		
		private void detach_TBLRECEIPTS_DETAILs1(TBLRECEIPTS_DETAIL entity)
		{
			this.SendPropertyChanging();
			entity.TBLPRODUCT1 = null;
		}
		
		private void attach_TBLHOLDDETAILs(TBLHOLDDETAIL entity)
		{
			this.SendPropertyChanging();
			entity.TBLPRODUCT = this;
		}
		
		private void detach_TBLHOLDDETAILs(TBLHOLDDETAIL entity)
		{
			this.SendPropertyChanging();
			entity.TBLPRODUCT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBLDELIVERY_RECEIPTS_DETAILS")]
	public partial class TBLDELIVERY_RECEIPTS_DETAIL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _RID;
		
		private int _PID;
		
		private System.Nullable<int> _Quantity;
		
		private System.Nullable<double> _SellPrice;
		
		private System.Nullable<double> _SecondaryPrice;
		
		private System.Nullable<int> _Discount;
		
		private System.Nullable<double> _Cost;
		
		private bool _HasTVA;
		
		private bool _HasDiscount;
		
		private bool _HasExpDate;
		
		private System.Nullable<System.DateTime> _ExpDate;
		
		private bool _isInSale;
		
		private System.Nullable<System.DateTime> _dateCreated;
		
		private int _inStockQuantity;
		
		private bool _hasSellProfitPercentage;
		
		private System.Nullable<int> _SellProfitPercentage;
		
		private bool _hasEmpProfitPercentage;
		
		private System.Nullable<int> _EmpProfitPercentage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRIDChanging(int value);
    partial void OnRIDChanged();
    partial void OnPIDChanging(int value);
    partial void OnPIDChanged();
    partial void OnQuantityChanging(System.Nullable<int> value);
    partial void OnQuantityChanged();
    partial void OnSellPriceChanging(System.Nullable<double> value);
    partial void OnSellPriceChanged();
    partial void OnSecondaryPriceChanging(System.Nullable<double> value);
    partial void OnSecondaryPriceChanged();
    partial void OnDiscountChanging(System.Nullable<int> value);
    partial void OnDiscountChanged();
    partial void OnCostChanging(System.Nullable<double> value);
    partial void OnCostChanged();
    partial void OnHasTVAChanging(bool value);
    partial void OnHasTVAChanged();
    partial void OnHasDiscountChanging(bool value);
    partial void OnHasDiscountChanged();
    partial void OnHasExpDateChanging(bool value);
    partial void OnHasExpDateChanged();
    partial void OnExpDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExpDateChanged();
    partial void OnisInSaleChanging(bool value);
    partial void OnisInSaleChanged();
    partial void OndateCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OndateCreatedChanged();
    partial void OninStockQuantityChanging(int value);
    partial void OninStockQuantityChanged();
    partial void OnhasSellProfitPercentageChanging(bool value);
    partial void OnhasSellProfitPercentageChanged();
    partial void OnSellProfitPercentageChanging(System.Nullable<int> value);
    partial void OnSellProfitPercentageChanged();
    partial void OnhasEmpProfitPercentageChanging(bool value);
    partial void OnhasEmpProfitPercentageChanged();
    partial void OnEmpProfitPercentageChanging(System.Nullable<int> value);
    partial void OnEmpProfitPercentageChanged();
    #endregion
		
		public TBLDELIVERY_RECEIPTS_DETAIL()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RID", DbType="Int NOT NULL")]
		public int RID
		{
			get
			{
				return this._RID;
			}
			set
			{
				if ((this._RID != value))
				{
					this.OnRIDChanging(value);
					this.SendPropertyChanging();
					this._RID = value;
					this.SendPropertyChanged("RID");
					this.OnRIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PID", DbType="Int NOT NULL")]
		public int PID
		{
			get
			{
				return this._PID;
			}
			set
			{
				if ((this._PID != value))
				{
					this.OnPIDChanging(value);
					this.SendPropertyChanging();
					this._PID = value;
					this.SendPropertyChanged("PID");
					this.OnPIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
		public System.Nullable<int> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellPrice", DbType="Float")]
		public System.Nullable<double> SellPrice
		{
			get
			{
				return this._SellPrice;
			}
			set
			{
				if ((this._SellPrice != value))
				{
					this.OnSellPriceChanging(value);
					this.SendPropertyChanging();
					this._SellPrice = value;
					this.SendPropertyChanged("SellPrice");
					this.OnSellPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondaryPrice", DbType="Float")]
		public System.Nullable<double> SecondaryPrice
		{
			get
			{
				return this._SecondaryPrice;
			}
			set
			{
				if ((this._SecondaryPrice != value))
				{
					this.OnSecondaryPriceChanging(value);
					this.SendPropertyChanging();
					this._SecondaryPrice = value;
					this.SendPropertyChanged("SecondaryPrice");
					this.OnSecondaryPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="Int")]
		public System.Nullable<int> Discount
		{
			get
			{
				return this._Discount;
			}
			set
			{
				if ((this._Discount != value))
				{
					this.OnDiscountChanging(value);
					this.SendPropertyChanging();
					this._Discount = value;
					this.SendPropertyChanged("Discount");
					this.OnDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Float")]
		public System.Nullable<double> Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasTVA", DbType="Bit NOT NULL")]
		public bool HasTVA
		{
			get
			{
				return this._HasTVA;
			}
			set
			{
				if ((this._HasTVA != value))
				{
					this.OnHasTVAChanging(value);
					this.SendPropertyChanging();
					this._HasTVA = value;
					this.SendPropertyChanged("HasTVA");
					this.OnHasTVAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasDiscount", DbType="Bit NOT NULL")]
		public bool HasDiscount
		{
			get
			{
				return this._HasDiscount;
			}
			set
			{
				if ((this._HasDiscount != value))
				{
					this.OnHasDiscountChanging(value);
					this.SendPropertyChanging();
					this._HasDiscount = value;
					this.SendPropertyChanged("HasDiscount");
					this.OnHasDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasExpDate", DbType="Bit NOT NULL")]
		public bool HasExpDate
		{
			get
			{
				return this._HasExpDate;
			}
			set
			{
				if ((this._HasExpDate != value))
				{
					this.OnHasExpDateChanging(value);
					this.SendPropertyChanging();
					this._HasExpDate = value;
					this.SendPropertyChanged("HasExpDate");
					this.OnHasExpDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExpDate
		{
			get
			{
				return this._ExpDate;
			}
			set
			{
				if ((this._ExpDate != value))
				{
					this.OnExpDateChanging(value);
					this.SendPropertyChanging();
					this._ExpDate = value;
					this.SendPropertyChanged("ExpDate");
					this.OnExpDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isInSale", DbType="Bit NOT NULL")]
		public bool isInSale
		{
			get
			{
				return this._isInSale;
			}
			set
			{
				if ((this._isInSale != value))
				{
					this.OnisInSaleChanging(value);
					this.SendPropertyChanging();
					this._isInSale = value;
					this.SendPropertyChanged("isInSale");
					this.OnisInSaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateCreated", DbType="DateTime")]
		public System.Nullable<System.DateTime> dateCreated
		{
			get
			{
				return this._dateCreated;
			}
			set
			{
				if ((this._dateCreated != value))
				{
					this.OndateCreatedChanging(value);
					this.SendPropertyChanging();
					this._dateCreated = value;
					this.SendPropertyChanged("dateCreated");
					this.OndateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_inStockQuantity", DbType="Int NOT NULL")]
		public int inStockQuantity
		{
			get
			{
				return this._inStockQuantity;
			}
			set
			{
				if ((this._inStockQuantity != value))
				{
					this.OninStockQuantityChanging(value);
					this.SendPropertyChanging();
					this._inStockQuantity = value;
					this.SendPropertyChanged("inStockQuantity");
					this.OninStockQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hasSellProfitPercentage", DbType="Bit NOT NULL")]
		public bool hasSellProfitPercentage
		{
			get
			{
				return this._hasSellProfitPercentage;
			}
			set
			{
				if ((this._hasSellProfitPercentage != value))
				{
					this.OnhasSellProfitPercentageChanging(value);
					this.SendPropertyChanging();
					this._hasSellProfitPercentage = value;
					this.SendPropertyChanged("hasSellProfitPercentage");
					this.OnhasSellProfitPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellProfitPercentage", DbType="Int")]
		public System.Nullable<int> SellProfitPercentage
		{
			get
			{
				return this._SellProfitPercentage;
			}
			set
			{
				if ((this._SellProfitPercentage != value))
				{
					this.OnSellProfitPercentageChanging(value);
					this.SendPropertyChanging();
					this._SellProfitPercentage = value;
					this.SendPropertyChanged("SellProfitPercentage");
					this.OnSellProfitPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hasEmpProfitPercentage", DbType="Bit NOT NULL")]
		public bool hasEmpProfitPercentage
		{
			get
			{
				return this._hasEmpProfitPercentage;
			}
			set
			{
				if ((this._hasEmpProfitPercentage != value))
				{
					this.OnhasEmpProfitPercentageChanging(value);
					this.SendPropertyChanging();
					this._hasEmpProfitPercentage = value;
					this.SendPropertyChanged("hasEmpProfitPercentage");
					this.OnhasEmpProfitPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpProfitPercentage", DbType="Int")]
		public System.Nullable<int> EmpProfitPercentage
		{
			get
			{
				return this._EmpProfitPercentage;
			}
			set
			{
				if ((this._EmpProfitPercentage != value))
				{
					this.OnEmpProfitPercentageChanging(value);
					this.SendPropertyChanging();
					this._EmpProfitPercentage = value;
					this.SendPropertyChanged("EmpProfitPercentage");
					this.OnEmpProfitPercentageChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class sp_getLastReceiptIDResult
	{
		
		private System.Nullable<int> _MAX_RID;
		
		public sp_getLastReceiptIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAX_RID", DbType="Int")]
		public System.Nullable<int> MAX_RID
		{
			get
			{
				return this._MAX_RID;
			}
			set
			{
				if ((this._MAX_RID != value))
				{
					this._MAX_RID = value;
				}
			}
		}
	}
	
	public partial class sp_select_itemResult
	{
		
		private int _ID;
		
		private string _ItemName;
		
		private System.Nullable<int> _Quantity;
		
		private string _Unit;
		
		private System.Nullable<System.DateTime> _AddedDate;
		
		private string _Status;
		
		public sp_select_itemResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemName", DbType="NVarChar(100)")]
		public string ItemName
		{
			get
			{
				return this._ItemName;
			}
			set
			{
				if ((this._ItemName != value))
				{
					this._ItemName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
		public System.Nullable<int> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this._Quantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit", DbType="NVarChar(20)")]
		public string Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				if ((this._Unit != value))
				{
					this._Unit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AddedDate
		{
			get
			{
				return this._AddedDate;
			}
			set
			{
				if ((this._AddedDate != value))
				{
					this._AddedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(8) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
	}
	
	public partial class sp_select_suppliersResult
	{
		
		private int _ID;
		
		private string _SupplierName;
		
		private string _PhoneNumber;
		
		private string _Email;
		
		private System.Nullable<System.DateTime> _AddedDate;
		
		private string _Status;
		
		public sp_select_suppliersResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierName", DbType="NVarChar(50)")]
		public string SupplierName
		{
			get
			{
				return this._SupplierName;
			}
			set
			{
				if ((this._SupplierName != value))
				{
					this._SupplierName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(50)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this._PhoneNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddedDate", DbType="Date")]
		public System.Nullable<System.DateTime> AddedDate
		{
			get
			{
				return this._AddedDate;
			}
			set
			{
				if ((this._AddedDate != value))
				{
					this._AddedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(8) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
	}
	
	public partial class sp_getSIDBySNAMEResult
	{
		
		private int _SID;
		
		public sp_getSIDBySNAMEResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SID", DbType="Int NOT NULL")]
		public int SID
		{
			get
			{
				return this._SID;
			}
			set
			{
				if ((this._SID != value))
				{
					this._SID = value;
				}
			}
		}
	}
	
	public partial class sp_getSupplierByIDResult
	{
		
		private int _SID;
		
		private string _SNAME;
		
		private string _SPHONE;
		
		private string _SEMAIL;
		
		private System.Nullable<System.DateTime> _ADD_DATE;
		
		private System.Nullable<bool> _ENABLED;
		
		public sp_getSupplierByIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SID", DbType="Int NOT NULL")]
		public int SID
		{
			get
			{
				return this._SID;
			}
			set
			{
				if ((this._SID != value))
				{
					this._SID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SNAME", DbType="NVarChar(50)")]
		public string SNAME
		{
			get
			{
				return this._SNAME;
			}
			set
			{
				if ((this._SNAME != value))
				{
					this._SNAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SPHONE", DbType="NVarChar(50)")]
		public string SPHONE
		{
			get
			{
				return this._SPHONE;
			}
			set
			{
				if ((this._SPHONE != value))
				{
					this._SPHONE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SEMAIL", DbType="NVarChar(50)")]
		public string SEMAIL
		{
			get
			{
				return this._SEMAIL;
			}
			set
			{
				if ((this._SEMAIL != value))
				{
					this._SEMAIL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADD_DATE", DbType="Date")]
		public System.Nullable<System.DateTime> ADD_DATE
		{
			get
			{
				return this._ADD_DATE;
			}
			set
			{
				if ((this._ADD_DATE != value))
				{
					this._ADD_DATE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ENABLED", DbType="Bit")]
		public System.Nullable<bool> ENABLED
		{
			get
			{
				return this._ENABLED;
			}
			set
			{
				if ((this._ENABLED != value))
				{
					this._ENABLED = value;
				}
			}
		}
	}
	
	public partial class sp_getSupplierByNAMEResult
	{
		
		private int _SID;
		
		private string _SNAME;
		
		private string _SPHONE;
		
		private string _SEMAIL;
		
		private System.Nullable<System.DateTime> _ADD_DATE;
		
		private System.Nullable<bool> _ENABLED;
		
		public sp_getSupplierByNAMEResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SID", DbType="Int NOT NULL")]
		public int SID
		{
			get
			{
				return this._SID;
			}
			set
			{
				if ((this._SID != value))
				{
					this._SID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SNAME", DbType="NVarChar(50)")]
		public string SNAME
		{
			get
			{
				return this._SNAME;
			}
			set
			{
				if ((this._SNAME != value))
				{
					this._SNAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SPHONE", DbType="NVarChar(50)")]
		public string SPHONE
		{
			get
			{
				return this._SPHONE;
			}
			set
			{
				if ((this._SPHONE != value))
				{
					this._SPHONE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SEMAIL", DbType="NVarChar(50)")]
		public string SEMAIL
		{
			get
			{
				return this._SEMAIL;
			}
			set
			{
				if ((this._SEMAIL != value))
				{
					this._SEMAIL = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADD_DATE", DbType="Date")]
		public System.Nullable<System.DateTime> ADD_DATE
		{
			get
			{
				return this._ADD_DATE;
			}
			set
			{
				if ((this._ADD_DATE != value))
				{
					this._ADD_DATE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ENABLED", DbType="Bit")]
		public System.Nullable<bool> ENABLED
		{
			get
			{
				return this._ENABLED;
			}
			set
			{
				if ((this._ENABLED != value))
				{
					this._ENABLED = value;
				}
			}
		}
	}
	
	public partial class sp_getTotalOfExpiredDateQteByPIDResult
	{
		
		private System.Nullable<int> _TotalQte;
		
		public sp_getTotalOfExpiredDateQteByPIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalQte", DbType="Int")]
		public System.Nullable<int> TotalQte
		{
			get
			{
				return this._TotalQte;
			}
			set
			{
				if ((this._TotalQte != value))
				{
					this._TotalQte = value;
				}
			}
		}
	}
	
	public partial class sp_getTotalOfExpiredDateQteByPNameResult
	{
		
		private System.Nullable<int> _TotalQte;
		
		public sp_getTotalOfExpiredDateQteByPNameResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalQte", DbType="Int")]
		public System.Nullable<int> TotalQte
		{
			get
			{
				return this._TotalQte;
			}
			set
			{
				if ((this._TotalQte != value))
				{
					this._TotalQte = value;
				}
			}
		}
	}
	
	public partial class sp_getBestItemsResult
	{
		
		private string _PNAME;
		
		private System.Nullable<double> _TOTAL;
		
		public sp_getBestItemsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PNAME", DbType="NVarChar(100)")]
		public string PNAME
		{
			get
			{
				return this._PNAME;
			}
			set
			{
				if ((this._PNAME != value))
				{
					this._PNAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOTAL", DbType="Float")]
		public System.Nullable<double> TOTAL
		{
			get
			{
				return this._TOTAL;
			}
			set
			{
				if ((this._TOTAL != value))
				{
					this._TOTAL = value;
				}
			}
		}
	}
	
	public partial class sp_getBestSuppliersResult
	{
		
		private string _SNAME;
		
		private System.Nullable<double> _TOTAL;
		
		public sp_getBestSuppliersResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SNAME", DbType="NVarChar(50)")]
		public string SNAME
		{
			get
			{
				return this._SNAME;
			}
			set
			{
				if ((this._SNAME != value))
				{
					this._SNAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOTAL", DbType="Float")]
		public System.Nullable<double> TOTAL
		{
			get
			{
				return this._TOTAL;
			}
			set
			{
				if ((this._TOTAL != value))
				{
					this._TOTAL = value;
				}
			}
		}
	}
	
	public partial class sp_getAllExpiredDateProductsResult
	{
		
		private string _BARCODE;
		
		private string _PNAME;
		
		private string _SNAME;
		
		private int _Qte;
		
		private System.Nullable<System.DateTime> _ExpiredDate;
		
		public sp_getAllExpiredDateProductsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BARCODE", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string BARCODE
		{
			get
			{
				return this._BARCODE;
			}
			set
			{
				if ((this._BARCODE != value))
				{
					this._BARCODE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PNAME", DbType="NVarChar(100)")]
		public string PNAME
		{
			get
			{
				return this._PNAME;
			}
			set
			{
				if ((this._PNAME != value))
				{
					this._PNAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SNAME", DbType="NVarChar(50)")]
		public string SNAME
		{
			get
			{
				return this._SNAME;
			}
			set
			{
				if ((this._SNAME != value))
				{
					this._SNAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Qte", DbType="Int NOT NULL")]
		public int Qte
		{
			get
			{
				return this._Qte;
			}
			set
			{
				if ((this._Qte != value))
				{
					this._Qte = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpiredDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExpiredDate
		{
			get
			{
				return this._ExpiredDate;
			}
			set
			{
				if ((this._ExpiredDate != value))
				{
					this._ExpiredDate = value;
				}
			}
		}
	}
	
	public partial class sp_selectReceiptsResult
	{
		
		private int _ID;
		
		private int _ReceiptTypeID;
		
		private string _BARCODE;
		
		private System.Nullable<int> _NumberOfItem;
		
		private System.Nullable<double> _TotalDolarPrice;
		
		private System.Nullable<int> _TotalLBPPrice;
		
		private System.Nullable<double> _TotalTVAPrice;
		
		private System.Nullable<double> _TotalDiscount;
		
		private System.Nullable<System.DateTime> _Date;
		
		private bool _isHold;
		
		private string _EmpCardNumber;
		
		public sp_selectReceiptsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptTypeID", DbType="Int NOT NULL")]
		public int ReceiptTypeID
		{
			get
			{
				return this._ReceiptTypeID;
			}
			set
			{
				if ((this._ReceiptTypeID != value))
				{
					this._ReceiptTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BARCODE", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string BARCODE
		{
			get
			{
				return this._BARCODE;
			}
			set
			{
				if ((this._BARCODE != value))
				{
					this._BARCODE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfItem", DbType="Int")]
		public System.Nullable<int> NumberOfItem
		{
			get
			{
				return this._NumberOfItem;
			}
			set
			{
				if ((this._NumberOfItem != value))
				{
					this._NumberOfItem = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDolarPrice", DbType="Float")]
		public System.Nullable<double> TotalDolarPrice
		{
			get
			{
				return this._TotalDolarPrice;
			}
			set
			{
				if ((this._TotalDolarPrice != value))
				{
					this._TotalDolarPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalLBPPrice", DbType="Int")]
		public System.Nullable<int> TotalLBPPrice
		{
			get
			{
				return this._TotalLBPPrice;
			}
			set
			{
				if ((this._TotalLBPPrice != value))
				{
					this._TotalLBPPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalTVAPrice", DbType="Float")]
		public System.Nullable<double> TotalTVAPrice
		{
			get
			{
				return this._TotalTVAPrice;
			}
			set
			{
				if ((this._TotalTVAPrice != value))
				{
					this._TotalTVAPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDiscount", DbType="Float")]
		public System.Nullable<double> TotalDiscount
		{
			get
			{
				return this._TotalDiscount;
			}
			set
			{
				if ((this._TotalDiscount != value))
				{
					this._TotalDiscount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isHold", DbType="Bit NOT NULL")]
		public bool isHold
		{
			get
			{
				return this._isHold;
			}
			set
			{
				if ((this._isHold != value))
				{
					this._isHold = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpCardNumber", DbType="NVarChar(50)")]
		public string EmpCardNumber
		{
			get
			{
				return this._EmpCardNumber;
			}
			set
			{
				if ((this._EmpCardNumber != value))
				{
					this._EmpCardNumber = value;
				}
			}
		}
	}
	
	public partial class sp_getReceiptByIDResult
	{
		
		private int _RID;
		
		private int _ReceiptTypeID;
		
		private System.Nullable<int> _RITEM_NB;
		
		private System.Nullable<double> _TOTAL_AMOUNTDollar;
		
		private System.Nullable<int> _TOTAL_AMOUNTLBP;
		
		private System.Nullable<double> _TotalTVA;
		
		private System.Nullable<double> _TotalDiscount;
		
		private System.Nullable<System.DateTime> _RDATE;
		
		private string _RBARCODE;
		
		private bool _isHold;
		
		private string _EmpCardNumber;
		
		public sp_getReceiptByIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RID", DbType="Int NOT NULL")]
		public int RID
		{
			get
			{
				return this._RID;
			}
			set
			{
				if ((this._RID != value))
				{
					this._RID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptTypeID", DbType="Int NOT NULL")]
		public int ReceiptTypeID
		{
			get
			{
				return this._ReceiptTypeID;
			}
			set
			{
				if ((this._ReceiptTypeID != value))
				{
					this._ReceiptTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RITEM_NB", DbType="Int")]
		public System.Nullable<int> RITEM_NB
		{
			get
			{
				return this._RITEM_NB;
			}
			set
			{
				if ((this._RITEM_NB != value))
				{
					this._RITEM_NB = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOTAL_AMOUNTDollar", DbType="Float")]
		public System.Nullable<double> TOTAL_AMOUNTDollar
		{
			get
			{
				return this._TOTAL_AMOUNTDollar;
			}
			set
			{
				if ((this._TOTAL_AMOUNTDollar != value))
				{
					this._TOTAL_AMOUNTDollar = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOTAL_AMOUNTLBP", DbType="Int")]
		public System.Nullable<int> TOTAL_AMOUNTLBP
		{
			get
			{
				return this._TOTAL_AMOUNTLBP;
			}
			set
			{
				if ((this._TOTAL_AMOUNTLBP != value))
				{
					this._TOTAL_AMOUNTLBP = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalTVA", DbType="Float")]
		public System.Nullable<double> TotalTVA
		{
			get
			{
				return this._TotalTVA;
			}
			set
			{
				if ((this._TotalTVA != value))
				{
					this._TotalTVA = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDiscount", DbType="Float")]
		public System.Nullable<double> TotalDiscount
		{
			get
			{
				return this._TotalDiscount;
			}
			set
			{
				if ((this._TotalDiscount != value))
				{
					this._TotalDiscount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> RDATE
		{
			get
			{
				return this._RDATE;
			}
			set
			{
				if ((this._RDATE != value))
				{
					this._RDATE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RBARCODE", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string RBARCODE
		{
			get
			{
				return this._RBARCODE;
			}
			set
			{
				if ((this._RBARCODE != value))
				{
					this._RBARCODE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isHold", DbType="Bit NOT NULL")]
		public bool isHold
		{
			get
			{
				return this._isHold;
			}
			set
			{
				if ((this._isHold != value))
				{
					this._isHold = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpCardNumber", DbType="NVarChar(50)")]
		public string EmpCardNumber
		{
			get
			{
				return this._EmpCardNumber;
			}
			set
			{
				if ((this._EmpCardNumber != value))
				{
					this._EmpCardNumber = value;
				}
			}
		}
	}
	
	public partial class sp_getReceiptByBarcodeResult
	{
		
		private int _RID;
		
		private int _ReceiptTypeID;
		
		private System.Nullable<int> _RITEM_NB;
		
		private System.Nullable<double> _TOTAL_AMOUNTDollar;
		
		private System.Nullable<int> _TOTAL_AMOUNTLBP;
		
		private System.Nullable<double> _TotalTVA;
		
		private System.Nullable<double> _TotalDiscount;
		
		private System.Nullable<System.DateTime> _RDATE;
		
		private string _RBARCODE;
		
		private bool _isHold;
		
		private string _EmpCardNumber;
		
		public sp_getReceiptByBarcodeResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RID", DbType="Int NOT NULL")]
		public int RID
		{
			get
			{
				return this._RID;
			}
			set
			{
				if ((this._RID != value))
				{
					this._RID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptTypeID", DbType="Int NOT NULL")]
		public int ReceiptTypeID
		{
			get
			{
				return this._ReceiptTypeID;
			}
			set
			{
				if ((this._ReceiptTypeID != value))
				{
					this._ReceiptTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RITEM_NB", DbType="Int")]
		public System.Nullable<int> RITEM_NB
		{
			get
			{
				return this._RITEM_NB;
			}
			set
			{
				if ((this._RITEM_NB != value))
				{
					this._RITEM_NB = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOTAL_AMOUNTDollar", DbType="Float")]
		public System.Nullable<double> TOTAL_AMOUNTDollar
		{
			get
			{
				return this._TOTAL_AMOUNTDollar;
			}
			set
			{
				if ((this._TOTAL_AMOUNTDollar != value))
				{
					this._TOTAL_AMOUNTDollar = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOTAL_AMOUNTLBP", DbType="Int")]
		public System.Nullable<int> TOTAL_AMOUNTLBP
		{
			get
			{
				return this._TOTAL_AMOUNTLBP;
			}
			set
			{
				if ((this._TOTAL_AMOUNTLBP != value))
				{
					this._TOTAL_AMOUNTLBP = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalTVA", DbType="Float")]
		public System.Nullable<double> TotalTVA
		{
			get
			{
				return this._TotalTVA;
			}
			set
			{
				if ((this._TotalTVA != value))
				{
					this._TotalTVA = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDiscount", DbType="Float")]
		public System.Nullable<double> TotalDiscount
		{
			get
			{
				return this._TotalDiscount;
			}
			set
			{
				if ((this._TotalDiscount != value))
				{
					this._TotalDiscount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> RDATE
		{
			get
			{
				return this._RDATE;
			}
			set
			{
				if ((this._RDATE != value))
				{
					this._RDATE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RBARCODE", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string RBARCODE
		{
			get
			{
				return this._RBARCODE;
			}
			set
			{
				if ((this._RBARCODE != value))
				{
					this._RBARCODE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isHold", DbType="Bit NOT NULL")]
		public bool isHold
		{
			get
			{
				return this._isHold;
			}
			set
			{
				if ((this._isHold != value))
				{
					this._isHold = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmpCardNumber", DbType="NVarChar(50)")]
		public string EmpCardNumber
		{
			get
			{
				return this._EmpCardNumber;
			}
			set
			{
				if ((this._EmpCardNumber != value))
				{
					this._EmpCardNumber = value;
				}
			}
		}
	}
	
	public partial class sp_getDailyCashByDateResult
	{
		
		private string _RBARCODE;
		
		private System.Nullable<int> _RITEM_NB;
		
		private System.Nullable<double> _TOTAL_AMOUNTDollar;
		
		private System.Nullable<int> _TOTAL_AMOUNTLBP;
		
		private System.Nullable<System.DateTime> _RDATE;
		
		private System.Nullable<double> _TotalTVA;
		
		private System.Nullable<double> _TotalDiscount;
		
		public sp_getDailyCashByDateResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RBARCODE", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string RBARCODE
		{
			get
			{
				return this._RBARCODE;
			}
			set
			{
				if ((this._RBARCODE != value))
				{
					this._RBARCODE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RITEM_NB", DbType="Int")]
		public System.Nullable<int> RITEM_NB
		{
			get
			{
				return this._RITEM_NB;
			}
			set
			{
				if ((this._RITEM_NB != value))
				{
					this._RITEM_NB = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOTAL_AMOUNTDollar", DbType="Float")]
		public System.Nullable<double> TOTAL_AMOUNTDollar
		{
			get
			{
				return this._TOTAL_AMOUNTDollar;
			}
			set
			{
				if ((this._TOTAL_AMOUNTDollar != value))
				{
					this._TOTAL_AMOUNTDollar = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOTAL_AMOUNTLBP", DbType="Int")]
		public System.Nullable<int> TOTAL_AMOUNTLBP
		{
			get
			{
				return this._TOTAL_AMOUNTLBP;
			}
			set
			{
				if ((this._TOTAL_AMOUNTLBP != value))
				{
					this._TOTAL_AMOUNTLBP = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> RDATE
		{
			get
			{
				return this._RDATE;
			}
			set
			{
				if ((this._RDATE != value))
				{
					this._RDATE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalTVA", DbType="Float")]
		public System.Nullable<double> TotalTVA
		{
			get
			{
				return this._TotalTVA;
			}
			set
			{
				if ((this._TotalTVA != value))
				{
					this._TotalTVA = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDiscount", DbType="Float")]
		public System.Nullable<double> TotalDiscount
		{
			get
			{
				return this._TotalDiscount;
			}
			set
			{
				if ((this._TotalDiscount != value))
				{
					this._TotalDiscount = value;
				}
			}
		}
	}
	
	public partial class sp_getProductsCountResult
	{
		
		private System.Nullable<int> _Product_Number;
		
		public sp_getProductsCountResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_Number", DbType="Int")]
		public System.Nullable<int> Product_Number
		{
			get
			{
				return this._Product_Number;
			}
			set
			{
				if ((this._Product_Number != value))
				{
					this._Product_Number = value;
				}
			}
		}
	}
	
	public partial class sp_selectDeliveryReceiptsDetailsResult
	{
		
		private string _Barcode;
		
		private string _RefID;
		
		private int _RID;
		
		private string _ProductName;
		
		private int _PID;
		
		private string _SupplierName;
		
		private System.Nullable<int> _Quantity;
		
		private System.Nullable<double> _SellPrice;
		
		private System.Nullable<double> _SecondaryPrice;
		
		private System.Nullable<int> _Discount;
		
		private System.Nullable<double> _Cost;
		
		private System.Nullable<int> _TotalQuantity;
		
		private System.Nullable<double> _TotalDiscount;
		
		private System.Nullable<int> _TotalLBP;
		
		private System.Nullable<double> _TotalDollar;
		
		private System.Nullable<double> _TotalTVA;
		
		public sp_selectDeliveryReceiptsDetailsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Barcode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Barcode
		{
			get
			{
				return this._Barcode;
			}
			set
			{
				if ((this._Barcode != value))
				{
					this._Barcode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RefID
		{
			get
			{
				return this._RefID;
			}
			set
			{
				if ((this._RefID != value))
				{
					this._RefID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RID", DbType="Int NOT NULL")]
		public int RID
		{
			get
			{
				return this._RID;
			}
			set
			{
				if ((this._RID != value))
				{
					this._RID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="NVarChar(100)")]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this._ProductName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PID", DbType="Int NOT NULL")]
		public int PID
		{
			get
			{
				return this._PID;
			}
			set
			{
				if ((this._PID != value))
				{
					this._PID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierName", DbType="NVarChar(50)")]
		public string SupplierName
		{
			get
			{
				return this._SupplierName;
			}
			set
			{
				if ((this._SupplierName != value))
				{
					this._SupplierName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
		public System.Nullable<int> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this._Quantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellPrice", DbType="Float")]
		public System.Nullable<double> SellPrice
		{
			get
			{
				return this._SellPrice;
			}
			set
			{
				if ((this._SellPrice != value))
				{
					this._SellPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondaryPrice", DbType="Float")]
		public System.Nullable<double> SecondaryPrice
		{
			get
			{
				return this._SecondaryPrice;
			}
			set
			{
				if ((this._SecondaryPrice != value))
				{
					this._SecondaryPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="Int")]
		public System.Nullable<int> Discount
		{
			get
			{
				return this._Discount;
			}
			set
			{
				if ((this._Discount != value))
				{
					this._Discount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Float")]
		public System.Nullable<double> Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this._Cost = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalQuantity", DbType="Int")]
		public System.Nullable<int> TotalQuantity
		{
			get
			{
				return this._TotalQuantity;
			}
			set
			{
				if ((this._TotalQuantity != value))
				{
					this._TotalQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDiscount", DbType="Float")]
		public System.Nullable<double> TotalDiscount
		{
			get
			{
				return this._TotalDiscount;
			}
			set
			{
				if ((this._TotalDiscount != value))
				{
					this._TotalDiscount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalLBP", DbType="Int")]
		public System.Nullable<int> TotalLBP
		{
			get
			{
				return this._TotalLBP;
			}
			set
			{
				if ((this._TotalLBP != value))
				{
					this._TotalLBP = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDollar", DbType="Float")]
		public System.Nullable<double> TotalDollar
		{
			get
			{
				return this._TotalDollar;
			}
			set
			{
				if ((this._TotalDollar != value))
				{
					this._TotalDollar = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalTVA", DbType="Float")]
		public System.Nullable<double> TotalTVA
		{
			get
			{
				return this._TotalTVA;
			}
			set
			{
				if ((this._TotalTVA != value))
				{
					this._TotalTVA = value;
				}
			}
		}
	}
	
	public partial class sp_selectReceiptsDetailsForReportMiniResult
	{
		
		private string _Barcode;
		
		private System.Nullable<int> _RID;
		
		private string _ProductName;
		
		private string _SupplierName;
		
		private System.Nullable<int> _Quantity;
		
		private System.Nullable<double> _DollarPrice;
		
		private System.Nullable<int> _LBPPrice;
		
		private System.Nullable<double> _TotalDolarPrice;
		
		private System.Nullable<int> _TotalLBPPrice;
		
		private System.Nullable<double> _TotalTVA;
		
		private System.Nullable<double> _TotalDiscount;
		
		public sp_selectReceiptsDetailsForReportMiniResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Barcode", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Barcode
		{
			get
			{
				return this._Barcode;
			}
			set
			{
				if ((this._Barcode != value))
				{
					this._Barcode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RID", DbType="Int")]
		public System.Nullable<int> RID
		{
			get
			{
				return this._RID;
			}
			set
			{
				if ((this._RID != value))
				{
					this._RID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="NVarChar(100)")]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this._ProductName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierName", DbType="NVarChar(50)")]
		public string SupplierName
		{
			get
			{
				return this._SupplierName;
			}
			set
			{
				if ((this._SupplierName != value))
				{
					this._SupplierName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
		public System.Nullable<int> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this._Quantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DollarPrice", DbType="Float")]
		public System.Nullable<double> DollarPrice
		{
			get
			{
				return this._DollarPrice;
			}
			set
			{
				if ((this._DollarPrice != value))
				{
					this._DollarPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LBPPrice", DbType="Int")]
		public System.Nullable<int> LBPPrice
		{
			get
			{
				return this._LBPPrice;
			}
			set
			{
				if ((this._LBPPrice != value))
				{
					this._LBPPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDolarPrice", DbType="Float")]
		public System.Nullable<double> TotalDolarPrice
		{
			get
			{
				return this._TotalDolarPrice;
			}
			set
			{
				if ((this._TotalDolarPrice != value))
				{
					this._TotalDolarPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalLBPPrice", DbType="Int")]
		public System.Nullable<int> TotalLBPPrice
		{
			get
			{
				return this._TotalLBPPrice;
			}
			set
			{
				if ((this._TotalLBPPrice != value))
				{
					this._TotalLBPPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalTVA", DbType="Float")]
		public System.Nullable<double> TotalTVA
		{
			get
			{
				return this._TotalTVA;
			}
			set
			{
				if ((this._TotalTVA != value))
				{
					this._TotalTVA = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDiscount", DbType="Float")]
		public System.Nullable<double> TotalDiscount
		{
			get
			{
				return this._TotalDiscount;
			}
			set
			{
				if ((this._TotalDiscount != value))
				{
					this._TotalDiscount = value;
				}
			}
		}
	}
	
	public partial class sp_getProductByNameResult
	{
		
		private int _PID;
		
		private string _PNAME;
		
		private int _QTE;
		
		private System.Nullable<double> _PRICE;
		
		private System.Nullable<System.DateTime> _ADD_DATE;
		
		private System.Nullable<bool> _ENABLED;
		
		private System.Nullable<bool> _HasQuantity;
		
		private string _BARCODE;
		
		private System.Nullable<int> _SID;
		
		private System.Nullable<int> _HasExpiredDate;
		
		private bool _HasTVA;
		
		private System.Nullable<double> _InitPrice;
		
		private System.Nullable<double> _SecondaryPrice;
		
		private System.Nullable<int> _DiscountPercentage;
		
		private bool _HasDiscount;
		
		private int _CurrencyID;
		
		public sp_getProductByNameResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PID", DbType="Int NOT NULL")]
		public int PID
		{
			get
			{
				return this._PID;
			}
			set
			{
				if ((this._PID != value))
				{
					this._PID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PNAME", DbType="NVarChar(100)")]
		public string PNAME
		{
			get
			{
				return this._PNAME;
			}
			set
			{
				if ((this._PNAME != value))
				{
					this._PNAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTE", DbType="Int NOT NULL")]
		public int QTE
		{
			get
			{
				return this._QTE;
			}
			set
			{
				if ((this._QTE != value))
				{
					this._QTE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRICE", DbType="Float")]
		public System.Nullable<double> PRICE
		{
			get
			{
				return this._PRICE;
			}
			set
			{
				if ((this._PRICE != value))
				{
					this._PRICE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADD_DATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> ADD_DATE
		{
			get
			{
				return this._ADD_DATE;
			}
			set
			{
				if ((this._ADD_DATE != value))
				{
					this._ADD_DATE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ENABLED", DbType="Bit")]
		public System.Nullable<bool> ENABLED
		{
			get
			{
				return this._ENABLED;
			}
			set
			{
				if ((this._ENABLED != value))
				{
					this._ENABLED = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasQuantity", DbType="Bit")]
		public System.Nullable<bool> HasQuantity
		{
			get
			{
				return this._HasQuantity;
			}
			set
			{
				if ((this._HasQuantity != value))
				{
					this._HasQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BARCODE", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string BARCODE
		{
			get
			{
				return this._BARCODE;
			}
			set
			{
				if ((this._BARCODE != value))
				{
					this._BARCODE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SID", DbType="Int")]
		public System.Nullable<int> SID
		{
			get
			{
				return this._SID;
			}
			set
			{
				if ((this._SID != value))
				{
					this._SID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasExpiredDate", DbType="Int")]
		public System.Nullable<int> HasExpiredDate
		{
			get
			{
				return this._HasExpiredDate;
			}
			set
			{
				if ((this._HasExpiredDate != value))
				{
					this._HasExpiredDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasTVA", DbType="Bit NOT NULL")]
		public bool HasTVA
		{
			get
			{
				return this._HasTVA;
			}
			set
			{
				if ((this._HasTVA != value))
				{
					this._HasTVA = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InitPrice", DbType="Float")]
		public System.Nullable<double> InitPrice
		{
			get
			{
				return this._InitPrice;
			}
			set
			{
				if ((this._InitPrice != value))
				{
					this._InitPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondaryPrice", DbType="Float")]
		public System.Nullable<double> SecondaryPrice
		{
			get
			{
				return this._SecondaryPrice;
			}
			set
			{
				if ((this._SecondaryPrice != value))
				{
					this._SecondaryPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountPercentage", DbType="Int")]
		public System.Nullable<int> DiscountPercentage
		{
			get
			{
				return this._DiscountPercentage;
			}
			set
			{
				if ((this._DiscountPercentage != value))
				{
					this._DiscountPercentage = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasDiscount", DbType="Bit NOT NULL")]
		public bool HasDiscount
		{
			get
			{
				return this._HasDiscount;
			}
			set
			{
				if ((this._HasDiscount != value))
				{
					this._HasDiscount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyID", DbType="Int NOT NULL")]
		public int CurrencyID
		{
			get
			{
				return this._CurrencyID;
			}
			set
			{
				if ((this._CurrencyID != value))
				{
					this._CurrencyID = value;
				}
			}
		}
	}
	
	public partial class sp_selectDeliveryReceiptsResult
	{
		
		private int _ID;
		
		private System.Nullable<int> _ReceiptTypeID;
		
		private string _BARCODE;
		
		private System.Nullable<int> _NumberOfItem;
		
		private System.Nullable<double> _TotalDolarPrice;
		
		private System.Nullable<int> _TotalLBPPrice;
		
		private System.Nullable<double> _TotalTVAPrice;
		
		private System.Nullable<double> _TotalDiscount;
		
		private System.Nullable<System.DateTime> _Date;
		
		private System.Nullable<int> _CurrencyID;
		
		private string _CurrencyName;
		
		private System.Nullable<int> _UserID;
		
		private int _StatusID;
		
		private string _StatusName;
		
		public sp_selectDeliveryReceiptsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptTypeID", DbType="Int")]
		public System.Nullable<int> ReceiptTypeID
		{
			get
			{
				return this._ReceiptTypeID;
			}
			set
			{
				if ((this._ReceiptTypeID != value))
				{
					this._ReceiptTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BARCODE", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BARCODE
		{
			get
			{
				return this._BARCODE;
			}
			set
			{
				if ((this._BARCODE != value))
				{
					this._BARCODE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfItem", DbType="Int")]
		public System.Nullable<int> NumberOfItem
		{
			get
			{
				return this._NumberOfItem;
			}
			set
			{
				if ((this._NumberOfItem != value))
				{
					this._NumberOfItem = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDolarPrice", DbType="Float")]
		public System.Nullable<double> TotalDolarPrice
		{
			get
			{
				return this._TotalDolarPrice;
			}
			set
			{
				if ((this._TotalDolarPrice != value))
				{
					this._TotalDolarPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalLBPPrice", DbType="Int")]
		public System.Nullable<int> TotalLBPPrice
		{
			get
			{
				return this._TotalLBPPrice;
			}
			set
			{
				if ((this._TotalLBPPrice != value))
				{
					this._TotalLBPPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalTVAPrice", DbType="Float")]
		public System.Nullable<double> TotalTVAPrice
		{
			get
			{
				return this._TotalTVAPrice;
			}
			set
			{
				if ((this._TotalTVAPrice != value))
				{
					this._TotalTVAPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDiscount", DbType="Float")]
		public System.Nullable<double> TotalDiscount
		{
			get
			{
				return this._TotalDiscount;
			}
			set
			{
				if ((this._TotalDiscount != value))
				{
					this._TotalDiscount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyID", DbType="Int")]
		public System.Nullable<int> CurrencyID
		{
			get
			{
				return this._CurrencyID;
			}
			set
			{
				if ((this._CurrencyID != value))
				{
					this._CurrencyID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyName", DbType="NVarChar(50)")]
		public string CurrencyName
		{
			get
			{
				return this._CurrencyName;
			}
			set
			{
				if ((this._CurrencyName != value))
				{
					this._CurrencyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusID", DbType="Int NOT NULL")]
		public int StatusID
		{
			get
			{
				return this._StatusID;
			}
			set
			{
				if ((this._StatusID != value))
				{
					this._StatusID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusName", DbType="NVarChar(50)")]
		public string StatusName
		{
			get
			{
				return this._StatusName;
			}
			set
			{
				if ((this._StatusName != value))
				{
					this._StatusName = value;
				}
			}
		}
	}
	
	public partial class sp_selectReceiptsDetailsResult
	{
		
		private string _Barcode;
		
		private System.Nullable<int> _RID;
		
		private string _ProductName;
		
		private string _SupplierName;
		
		private System.Nullable<int> _Quantity;
		
		private System.Nullable<double> _DollarPrice;
		
		private System.Nullable<int> _LBPPrice;
		
		private System.Nullable<double> _TotalDolarPrice;
		
		private System.Nullable<int> _TotalLBPPrice;
		
		private System.Nullable<double> _TotalTVA;
		
		private System.Nullable<double> _TotalDiscount;
		
		public sp_selectReceiptsDetailsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Barcode", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Barcode
		{
			get
			{
				return this._Barcode;
			}
			set
			{
				if ((this._Barcode != value))
				{
					this._Barcode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RID", DbType="Int")]
		public System.Nullable<int> RID
		{
			get
			{
				return this._RID;
			}
			set
			{
				if ((this._RID != value))
				{
					this._RID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="NVarChar(100)")]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this._ProductName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierName", DbType="NVarChar(50)")]
		public string SupplierName
		{
			get
			{
				return this._SupplierName;
			}
			set
			{
				if ((this._SupplierName != value))
				{
					this._SupplierName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
		public System.Nullable<int> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this._Quantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DollarPrice", DbType="Float")]
		public System.Nullable<double> DollarPrice
		{
			get
			{
				return this._DollarPrice;
			}
			set
			{
				if ((this._DollarPrice != value))
				{
					this._DollarPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LBPPrice", DbType="Int")]
		public System.Nullable<int> LBPPrice
		{
			get
			{
				return this._LBPPrice;
			}
			set
			{
				if ((this._LBPPrice != value))
				{
					this._LBPPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDolarPrice", DbType="Float")]
		public System.Nullable<double> TotalDolarPrice
		{
			get
			{
				return this._TotalDolarPrice;
			}
			set
			{
				if ((this._TotalDolarPrice != value))
				{
					this._TotalDolarPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalLBPPrice", DbType="Int")]
		public System.Nullable<int> TotalLBPPrice
		{
			get
			{
				return this._TotalLBPPrice;
			}
			set
			{
				if ((this._TotalLBPPrice != value))
				{
					this._TotalLBPPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalTVA", DbType="Float")]
		public System.Nullable<double> TotalTVA
		{
			get
			{
				return this._TotalTVA;
			}
			set
			{
				if ((this._TotalTVA != value))
				{
					this._TotalTVA = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDiscount", DbType="Float")]
		public System.Nullable<double> TotalDiscount
		{
			get
			{
				return this._TotalDiscount;
			}
			set
			{
				if ((this._TotalDiscount != value))
				{
					this._TotalDiscount = value;
				}
			}
		}
	}
	
	public partial class sp_select_productsResult
	{
		
		private int _ID;
		
		private string _Barcode;
		
		private string _ProductName;
		
		private string _SupplierName;
		
		private int _Quantity;
		
		private System.Nullable<double> _Price;
		
		private System.Nullable<System.DateTime> _AddedDate;
		
		private string _Status;
		
		private System.Nullable<double> _InitPrice;
		
		private System.Nullable<double> _SecondaryPrice;
		
		private bool _HasTVA;
		
		private System.Nullable<int> _DiscountPercentage;
		
		private bool _HasDiscount;
		
		public sp_select_productsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Barcode", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Barcode
		{
			get
			{
				return this._Barcode;
			}
			set
			{
				if ((this._Barcode != value))
				{
					this._Barcode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="NVarChar(100)")]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this._ProductName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierName", DbType="NVarChar(50)")]
		public string SupplierName
		{
			get
			{
				return this._SupplierName;
			}
			set
			{
				if ((this._SupplierName != value))
				{
					this._SupplierName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this._Quantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float")]
		public System.Nullable<double> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AddedDate
		{
			get
			{
				return this._AddedDate;
			}
			set
			{
				if ((this._AddedDate != value))
				{
					this._AddedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(8) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InitPrice", DbType="Float")]
		public System.Nullable<double> InitPrice
		{
			get
			{
				return this._InitPrice;
			}
			set
			{
				if ((this._InitPrice != value))
				{
					this._InitPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondaryPrice", DbType="Float")]
		public System.Nullable<double> SecondaryPrice
		{
			get
			{
				return this._SecondaryPrice;
			}
			set
			{
				if ((this._SecondaryPrice != value))
				{
					this._SecondaryPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasTVA", DbType="Bit NOT NULL")]
		public bool HasTVA
		{
			get
			{
				return this._HasTVA;
			}
			set
			{
				if ((this._HasTVA != value))
				{
					this._HasTVA = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountPercentage", DbType="Int")]
		public System.Nullable<int> DiscountPercentage
		{
			get
			{
				return this._DiscountPercentage;
			}
			set
			{
				if ((this._DiscountPercentage != value))
				{
					this._DiscountPercentage = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasDiscount", DbType="Bit NOT NULL")]
		public bool HasDiscount
		{
			get
			{
				return this._HasDiscount;
			}
			set
			{
				if ((this._HasDiscount != value))
				{
					this._HasDiscount = value;
				}
			}
		}
	}
	
	public partial class sp_getSalesProductCountByDateResult
	{
		
		private string _BARCODE;
		
		private string _PNAME;
		
		private System.Nullable<int> _TotalSale;
		
		private System.Nullable<int> _TotalReturn;
		
		public sp_getSalesProductCountByDateResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BARCODE", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string BARCODE
		{
			get
			{
				return this._BARCODE;
			}
			set
			{
				if ((this._BARCODE != value))
				{
					this._BARCODE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PNAME", DbType="NVarChar(100)")]
		public string PNAME
		{
			get
			{
				return this._PNAME;
			}
			set
			{
				if ((this._PNAME != value))
				{
					this._PNAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalSale", DbType="Int")]
		public System.Nullable<int> TotalSale
		{
			get
			{
				return this._TotalSale;
			}
			set
			{
				if ((this._TotalSale != value))
				{
					this._TotalSale = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalReturn", DbType="Int")]
		public System.Nullable<int> TotalReturn
		{
			get
			{
				return this._TotalReturn;
			}
			set
			{
				if ((this._TotalReturn != value))
				{
					this._TotalReturn = value;
				}
			}
		}
	}
	
	public partial class sp_getProductListResult
	{
		
		private string _BARCODE;
		
		private string _PNAME;
		
		private string _SNAME;
		
		private System.Nullable<double> _PRICE;
		
		private int _QTE;
		
		private System.Nullable<bool> _HasQuantity;
		
		private System.Nullable<int> _HasExpiredDate;
		
		private bool _HasTVA;
		
		private System.Nullable<double> _InitPrice;
		
		private System.Nullable<double> _SecondaryPrice;
		
		private System.Nullable<int> _DiscountPercentage;
		
		private bool _HasDiscount;
		
		private int _CurrencyID;
		
		private string _CurrencyName;
		
		public sp_getProductListResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BARCODE", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string BARCODE
		{
			get
			{
				return this._BARCODE;
			}
			set
			{
				if ((this._BARCODE != value))
				{
					this._BARCODE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PNAME", DbType="NVarChar(100)")]
		public string PNAME
		{
			get
			{
				return this._PNAME;
			}
			set
			{
				if ((this._PNAME != value))
				{
					this._PNAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SNAME", DbType="NVarChar(50)")]
		public string SNAME
		{
			get
			{
				return this._SNAME;
			}
			set
			{
				if ((this._SNAME != value))
				{
					this._SNAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRICE", DbType="Float")]
		public System.Nullable<double> PRICE
		{
			get
			{
				return this._PRICE;
			}
			set
			{
				if ((this._PRICE != value))
				{
					this._PRICE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTE", DbType="Int NOT NULL")]
		public int QTE
		{
			get
			{
				return this._QTE;
			}
			set
			{
				if ((this._QTE != value))
				{
					this._QTE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasQuantity", DbType="Bit")]
		public System.Nullable<bool> HasQuantity
		{
			get
			{
				return this._HasQuantity;
			}
			set
			{
				if ((this._HasQuantity != value))
				{
					this._HasQuantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasExpiredDate", DbType="Int")]
		public System.Nullable<int> HasExpiredDate
		{
			get
			{
				return this._HasExpiredDate;
			}
			set
			{
				if ((this._HasExpiredDate != value))
				{
					this._HasExpiredDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasTVA", DbType="Bit NOT NULL")]
		public bool HasTVA
		{
			get
			{
				return this._HasTVA;
			}
			set
			{
				if ((this._HasTVA != value))
				{
					this._HasTVA = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InitPrice", DbType="Float")]
		public System.Nullable<double> InitPrice
		{
			get
			{
				return this._InitPrice;
			}
			set
			{
				if ((this._InitPrice != value))
				{
					this._InitPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SecondaryPrice", DbType="Float")]
		public System.Nullable<double> SecondaryPrice
		{
			get
			{
				return this._SecondaryPrice;
			}
			set
			{
				if ((this._SecondaryPrice != value))
				{
					this._SecondaryPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountPercentage", DbType="Int")]
		public System.Nullable<int> DiscountPercentage
		{
			get
			{
				return this._DiscountPercentage;
			}
			set
			{
				if ((this._DiscountPercentage != value))
				{
					this._DiscountPercentage = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasDiscount", DbType="Bit NOT NULL")]
		public bool HasDiscount
		{
			get
			{
				return this._HasDiscount;
			}
			set
			{
				if ((this._HasDiscount != value))
				{
					this._HasDiscount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyID", DbType="Int NOT NULL")]
		public int CurrencyID
		{
			get
			{
				return this._CurrencyID;
			}
			set
			{
				if ((this._CurrencyID != value))
				{
					this._CurrencyID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrencyName", DbType="NVarChar(50)")]
		public string CurrencyName
		{
			get
			{
				return this._CurrencyName;
			}
			set
			{
				if ((this._CurrencyName != value))
				{
					this._CurrencyName = value;
				}
			}
		}
	}
	
	public partial class sp_getUserDiscountCountByDayResult
	{
		
		private System.Nullable<int> _num;
		
		public sp_getUserDiscountCountByDayResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_num", DbType="Int")]
		public System.Nullable<int> num
		{
			get
			{
				return this._num;
			}
			set
			{
				if ((this._num != value))
				{
					this._num = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
