#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MiniGram.LINQ
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="MiniGramCashDB")]
	public partial class MiniGramDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTBLITEM(TBLITEM instance);
    partial void UpdateTBLITEM(TBLITEM instance);
    partial void DeleteTBLITEM(TBLITEM instance);
    partial void InsertTBLPRODUCT(TBLPRODUCT instance);
    partial void UpdateTBLPRODUCT(TBLPRODUCT instance);
    partial void DeleteTBLPRODUCT(TBLPRODUCT instance);
    partial void InsertTBLRECEIPT(TBLRECEIPT instance);
    partial void UpdateTBLRECEIPT(TBLRECEIPT instance);
    partial void DeleteTBLRECEIPT(TBLRECEIPT instance);
    partial void InsertTBLRECEIPTS_DETAIL(TBLRECEIPTS_DETAIL instance);
    partial void UpdateTBLRECEIPTS_DETAIL(TBLRECEIPTS_DETAIL instance);
    partial void DeleteTBLRECEIPTS_DETAIL(TBLRECEIPTS_DETAIL instance);
    #endregion
		
		public MiniGramDBDataContext() : 
				base(global::MiniGram.Properties.Settings.Default.MiniGramCashDBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MiniGramDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MiniGramDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MiniGramDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MiniGramDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<TBLITEM> TBLITEMs
		{
			get
			{
				return this.GetTable<TBLITEM>();
			}
		}
		
		public System.Data.Linq.Table<TBLPRODUCT> TBLPRODUCTs
		{
			get
			{
				return this.GetTable<TBLPRODUCT>();
			}
		}
		
		public System.Data.Linq.Table<TBLRECEIPT> TBLRECEIPTs
		{
			get
			{
				return this.GetTable<TBLRECEIPT>();
			}
		}
		
		public System.Data.Linq.Table<TBLRECEIPTS_DETAIL> TBLRECEIPTS_DETAILs
		{
			get
			{
				return this.GetTable<TBLRECEIPTS_DETAIL>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_addNewItem")]
		public int sp_addNewItem([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> qte, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(20)")] string unit)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), name, qte, unit);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_addNewProduct")]
		public int sp_addNewProduct([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> qte, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> price, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> hasQuantity)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), name, qte, price, hasQuantity);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_disableItemByID")]
		public int sp_disableItemByID([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_disableProductByID")]
		public int sp_disableProductByID([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_enableItemByID")]
		public int sp_enableItemByID([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_enableProductByID")]
		public int sp_enableProductByID([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_UpdateItem")]
		public int sp_UpdateItem([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> qte, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(20)")] string unit)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, name, qte, unit);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_UpdateProduct")]
		public int sp_UpdateProduct([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> qte, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> price, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> hasQuantity)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, name, qte, price, hasQuantity);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_select_products")]
		public ISingleResult<sp_select_productsResult> sp_select_products([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string str)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), str);
			return ((ISingleResult<sp_select_productsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_select_item")]
		public ISingleResult<sp_select_itemResult> sp_select_item([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string str)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), str);
			return ((ISingleResult<sp_select_itemResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_getLastReceiptID")]
		public ISingleResult<sp_getLastReceiptIDResult> sp_getLastReceiptID()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<sp_getLastReceiptIDResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_getProductsCount")]
		public ISingleResult<sp_getProductsCountResult> sp_getProductsCount()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<sp_getProductsCountResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_insertNewRecipt")]
		public int sp_insertNewRecipt([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> itemnb, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> totaldollar, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> totallbp)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), itemnb, totaldollar, totallbp);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_insertNewReciptDetail")]
		public int sp_insertNewReciptDetail([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> rid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pid, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> qte, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> pricedollar, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> totaldollar, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> pricelbp, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> totallbp)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), rid, pid, qte, pricedollar, totaldollar, pricelbp, totallbp);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_selectReceipts")]
		public ISingleResult<sp_selectReceiptsResult> sp_selectReceipts([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string str)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), str);
			return ((ISingleResult<sp_selectReceiptsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_selectReceiptsDetails")]
		public ISingleResult<sp_selectReceiptsDetailsResult> sp_selectReceiptsDetails([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string str)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), str);
			return ((ISingleResult<sp_selectReceiptsDetailsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_getProductByName")]
		public ISingleResult<sp_getProductByNameResult> sp_getProductByName([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string name)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), name);
			return ((ISingleResult<sp_getProductByNameResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBLITEMS")]
	public partial class TBLITEM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IID;
		
		private string _INAME;
		
		private System.Nullable<int> _QTE;
		
		private string _UNIT;
		
		private System.Nullable<System.DateTime> _ADD_DATE;
		
		private System.Nullable<bool> _ENABLED;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIIDChanging(int value);
    partial void OnIIDChanged();
    partial void OnINAMEChanging(string value);
    partial void OnINAMEChanged();
    partial void OnQTEChanging(System.Nullable<int> value);
    partial void OnQTEChanged();
    partial void OnUNITChanging(string value);
    partial void OnUNITChanged();
    partial void OnADD_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnADD_DATEChanged();
    partial void OnENABLEDChanging(System.Nullable<bool> value);
    partial void OnENABLEDChanged();
    #endregion
		
		public TBLITEM()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IID
		{
			get
			{
				return this._IID;
			}
			set
			{
				if ((this._IID != value))
				{
					this.OnIIDChanging(value);
					this.SendPropertyChanging();
					this._IID = value;
					this.SendPropertyChanged("IID");
					this.OnIIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INAME", DbType="NVarChar(100)")]
		public string INAME
		{
			get
			{
				return this._INAME;
			}
			set
			{
				if ((this._INAME != value))
				{
					this.OnINAMEChanging(value);
					this.SendPropertyChanging();
					this._INAME = value;
					this.SendPropertyChanged("INAME");
					this.OnINAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTE", DbType="Int")]
		public System.Nullable<int> QTE
		{
			get
			{
				return this._QTE;
			}
			set
			{
				if ((this._QTE != value))
				{
					this.OnQTEChanging(value);
					this.SendPropertyChanging();
					this._QTE = value;
					this.SendPropertyChanged("QTE");
					this.OnQTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UNIT", DbType="NVarChar(20)")]
		public string UNIT
		{
			get
			{
				return this._UNIT;
			}
			set
			{
				if ((this._UNIT != value))
				{
					this.OnUNITChanging(value);
					this.SendPropertyChanging();
					this._UNIT = value;
					this.SendPropertyChanged("UNIT");
					this.OnUNITChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADD_DATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> ADD_DATE
		{
			get
			{
				return this._ADD_DATE;
			}
			set
			{
				if ((this._ADD_DATE != value))
				{
					this.OnADD_DATEChanging(value);
					this.SendPropertyChanging();
					this._ADD_DATE = value;
					this.SendPropertyChanged("ADD_DATE");
					this.OnADD_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ENABLED", DbType="Bit")]
		public System.Nullable<bool> ENABLED
		{
			get
			{
				return this._ENABLED;
			}
			set
			{
				if ((this._ENABLED != value))
				{
					this.OnENABLEDChanging(value);
					this.SendPropertyChanging();
					this._ENABLED = value;
					this.SendPropertyChanged("ENABLED");
					this.OnENABLEDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBLPRODUCTS")]
	public partial class TBLPRODUCT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PID;
		
		private string _PNAME;
		
		private System.Nullable<int> _QTE;
		
		private System.Nullable<double> _PRICE;
		
		private System.Nullable<System.DateTime> _ADD_DATE;
		
		private System.Nullable<bool> _ENABLED;
		
		private System.Nullable<bool> _HasQuantity;
		
		private EntitySet<TBLRECEIPTS_DETAIL> _TBLRECEIPTS_DETAILs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPIDChanging(int value);
    partial void OnPIDChanged();
    partial void OnPNAMEChanging(string value);
    partial void OnPNAMEChanged();
    partial void OnQTEChanging(System.Nullable<int> value);
    partial void OnQTEChanged();
    partial void OnPRICEChanging(System.Nullable<double> value);
    partial void OnPRICEChanged();
    partial void OnADD_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnADD_DATEChanged();
    partial void OnENABLEDChanging(System.Nullable<bool> value);
    partial void OnENABLEDChanged();
    partial void OnHasQuantityChanging(System.Nullable<bool> value);
    partial void OnHasQuantityChanged();
    #endregion
		
		public TBLPRODUCT()
		{
			this._TBLRECEIPTS_DETAILs = new EntitySet<TBLRECEIPTS_DETAIL>(new Action<TBLRECEIPTS_DETAIL>(this.attach_TBLRECEIPTS_DETAILs), new Action<TBLRECEIPTS_DETAIL>(this.detach_TBLRECEIPTS_DETAILs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PID
		{
			get
			{
				return this._PID;
			}
			set
			{
				if ((this._PID != value))
				{
					this.OnPIDChanging(value);
					this.SendPropertyChanging();
					this._PID = value;
					this.SendPropertyChanged("PID");
					this.OnPIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PNAME", DbType="NVarChar(100)")]
		public string PNAME
		{
			get
			{
				return this._PNAME;
			}
			set
			{
				if ((this._PNAME != value))
				{
					this.OnPNAMEChanging(value);
					this.SendPropertyChanging();
					this._PNAME = value;
					this.SendPropertyChanged("PNAME");
					this.OnPNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTE", DbType="Int")]
		public System.Nullable<int> QTE
		{
			get
			{
				return this._QTE;
			}
			set
			{
				if ((this._QTE != value))
				{
					this.OnQTEChanging(value);
					this.SendPropertyChanging();
					this._QTE = value;
					this.SendPropertyChanged("QTE");
					this.OnQTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRICE", DbType="Float")]
		public System.Nullable<double> PRICE
		{
			get
			{
				return this._PRICE;
			}
			set
			{
				if ((this._PRICE != value))
				{
					this.OnPRICEChanging(value);
					this.SendPropertyChanging();
					this._PRICE = value;
					this.SendPropertyChanged("PRICE");
					this.OnPRICEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADD_DATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> ADD_DATE
		{
			get
			{
				return this._ADD_DATE;
			}
			set
			{
				if ((this._ADD_DATE != value))
				{
					this.OnADD_DATEChanging(value);
					this.SendPropertyChanging();
					this._ADD_DATE = value;
					this.SendPropertyChanged("ADD_DATE");
					this.OnADD_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ENABLED", DbType="Bit")]
		public System.Nullable<bool> ENABLED
		{
			get
			{
				return this._ENABLED;
			}
			set
			{
				if ((this._ENABLED != value))
				{
					this.OnENABLEDChanging(value);
					this.SendPropertyChanging();
					this._ENABLED = value;
					this.SendPropertyChanged("ENABLED");
					this.OnENABLEDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasQuantity", DbType="Bit")]
		public System.Nullable<bool> HasQuantity
		{
			get
			{
				return this._HasQuantity;
			}
			set
			{
				if ((this._HasQuantity != value))
				{
					this.OnHasQuantityChanging(value);
					this.SendPropertyChanging();
					this._HasQuantity = value;
					this.SendPropertyChanged("HasQuantity");
					this.OnHasQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBLPRODUCT_TBLRECEIPTS_DETAIL", Storage="_TBLRECEIPTS_DETAILs", ThisKey="PID", OtherKey="PID")]
		public EntitySet<TBLRECEIPTS_DETAIL> TBLRECEIPTS_DETAILs
		{
			get
			{
				return this._TBLRECEIPTS_DETAILs;
			}
			set
			{
				this._TBLRECEIPTS_DETAILs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TBLRECEIPTS_DETAILs(TBLRECEIPTS_DETAIL entity)
		{
			this.SendPropertyChanging();
			entity.TBLPRODUCT = this;
		}
		
		private void detach_TBLRECEIPTS_DETAILs(TBLRECEIPTS_DETAIL entity)
		{
			this.SendPropertyChanging();
			entity.TBLPRODUCT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBLRECEIPTS")]
	public partial class TBLRECEIPT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RID;
		
		private System.Nullable<int> _RITEM_NB;
		
		private System.Nullable<double> _TOTAL_AMOUNT;
		
		private System.Nullable<System.DateTime> _RDATE;
		
		private EntitySet<TBLRECEIPTS_DETAIL> _TBLRECEIPTS_DETAILs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRIDChanging(int value);
    partial void OnRIDChanged();
    partial void OnRITEM_NBChanging(System.Nullable<int> value);
    partial void OnRITEM_NBChanged();
    partial void OnTOTAL_AMOUNTChanging(System.Nullable<double> value);
    partial void OnTOTAL_AMOUNTChanged();
    partial void OnRDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnRDATEChanged();
    #endregion
		
		public TBLRECEIPT()
		{
			this._TBLRECEIPTS_DETAILs = new EntitySet<TBLRECEIPTS_DETAIL>(new Action<TBLRECEIPTS_DETAIL>(this.attach_TBLRECEIPTS_DETAILs), new Action<TBLRECEIPTS_DETAIL>(this.detach_TBLRECEIPTS_DETAILs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RID
		{
			get
			{
				return this._RID;
			}
			set
			{
				if ((this._RID != value))
				{
					this.OnRIDChanging(value);
					this.SendPropertyChanging();
					this._RID = value;
					this.SendPropertyChanged("RID");
					this.OnRIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RITEM_NB", DbType="Int")]
		public System.Nullable<int> RITEM_NB
		{
			get
			{
				return this._RITEM_NB;
			}
			set
			{
				if ((this._RITEM_NB != value))
				{
					this.OnRITEM_NBChanging(value);
					this.SendPropertyChanging();
					this._RITEM_NB = value;
					this.SendPropertyChanged("RITEM_NB");
					this.OnRITEM_NBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOTAL_AMOUNT", DbType="Float")]
		public System.Nullable<double> TOTAL_AMOUNT
		{
			get
			{
				return this._TOTAL_AMOUNT;
			}
			set
			{
				if ((this._TOTAL_AMOUNT != value))
				{
					this.OnTOTAL_AMOUNTChanging(value);
					this.SendPropertyChanging();
					this._TOTAL_AMOUNT = value;
					this.SendPropertyChanged("TOTAL_AMOUNT");
					this.OnTOTAL_AMOUNTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> RDATE
		{
			get
			{
				return this._RDATE;
			}
			set
			{
				if ((this._RDATE != value))
				{
					this.OnRDATEChanging(value);
					this.SendPropertyChanging();
					this._RDATE = value;
					this.SendPropertyChanged("RDATE");
					this.OnRDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBLRECEIPT_TBLRECEIPTS_DETAIL", Storage="_TBLRECEIPTS_DETAILs", ThisKey="RID", OtherKey="RID")]
		public EntitySet<TBLRECEIPTS_DETAIL> TBLRECEIPTS_DETAILs
		{
			get
			{
				return this._TBLRECEIPTS_DETAILs;
			}
			set
			{
				this._TBLRECEIPTS_DETAILs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TBLRECEIPTS_DETAILs(TBLRECEIPTS_DETAIL entity)
		{
			this.SendPropertyChanging();
			entity.TBLRECEIPT = this;
		}
		
		private void detach_TBLRECEIPTS_DETAILs(TBLRECEIPTS_DETAIL entity)
		{
			this.SendPropertyChanging();
			entity.TBLRECEIPT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBLRECEIPTS_DETAILS")]
	public partial class TBLRECEIPTS_DETAIL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _RID;
		
		private System.Nullable<int> _PID;
		
		private System.Nullable<int> _QTE;
		
		private System.Nullable<double> _PRICE;
		
		private System.Nullable<double> _TOTAL_PRICE;
		
		private EntityRef<TBLPRODUCT> _TBLPRODUCT;
		
		private EntityRef<TBLRECEIPT> _TBLRECEIPT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRIDChanging(System.Nullable<int> value);
    partial void OnRIDChanged();
    partial void OnPIDChanging(System.Nullable<int> value);
    partial void OnPIDChanged();
    partial void OnQTEChanging(System.Nullable<int> value);
    partial void OnQTEChanged();
    partial void OnPRICEChanging(System.Nullable<double> value);
    partial void OnPRICEChanged();
    partial void OnTOTAL_PRICEChanging(System.Nullable<double> value);
    partial void OnTOTAL_PRICEChanged();
    #endregion
		
		public TBLRECEIPTS_DETAIL()
		{
			this._TBLPRODUCT = default(EntityRef<TBLPRODUCT>);
			this._TBLRECEIPT = default(EntityRef<TBLRECEIPT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RID", DbType="Int")]
		public System.Nullable<int> RID
		{
			get
			{
				return this._RID;
			}
			set
			{
				if ((this._RID != value))
				{
					if (this._TBLRECEIPT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRIDChanging(value);
					this.SendPropertyChanging();
					this._RID = value;
					this.SendPropertyChanged("RID");
					this.OnRIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PID", DbType="Int")]
		public System.Nullable<int> PID
		{
			get
			{
				return this._PID;
			}
			set
			{
				if ((this._PID != value))
				{
					if (this._TBLPRODUCT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPIDChanging(value);
					this.SendPropertyChanging();
					this._PID = value;
					this.SendPropertyChanged("PID");
					this.OnPIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTE", DbType="Int")]
		public System.Nullable<int> QTE
		{
			get
			{
				return this._QTE;
			}
			set
			{
				if ((this._QTE != value))
				{
					this.OnQTEChanging(value);
					this.SendPropertyChanging();
					this._QTE = value;
					this.SendPropertyChanged("QTE");
					this.OnQTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRICE", DbType="Float")]
		public System.Nullable<double> PRICE
		{
			get
			{
				return this._PRICE;
			}
			set
			{
				if ((this._PRICE != value))
				{
					this.OnPRICEChanging(value);
					this.SendPropertyChanging();
					this._PRICE = value;
					this.SendPropertyChanged("PRICE");
					this.OnPRICEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TOTAL_PRICE", DbType="Float")]
		public System.Nullable<double> TOTAL_PRICE
		{
			get
			{
				return this._TOTAL_PRICE;
			}
			set
			{
				if ((this._TOTAL_PRICE != value))
				{
					this.OnTOTAL_PRICEChanging(value);
					this.SendPropertyChanging();
					this._TOTAL_PRICE = value;
					this.SendPropertyChanged("TOTAL_PRICE");
					this.OnTOTAL_PRICEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBLPRODUCT_TBLRECEIPTS_DETAIL", Storage="_TBLPRODUCT", ThisKey="PID", OtherKey="PID", IsForeignKey=true)]
		public TBLPRODUCT TBLPRODUCT
		{
			get
			{
				return this._TBLPRODUCT.Entity;
			}
			set
			{
				TBLPRODUCT previousValue = this._TBLPRODUCT.Entity;
				if (((previousValue != value) 
							|| (this._TBLPRODUCT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TBLPRODUCT.Entity = null;
						previousValue.TBLRECEIPTS_DETAILs.Remove(this);
					}
					this._TBLPRODUCT.Entity = value;
					if ((value != null))
					{
						value.TBLRECEIPTS_DETAILs.Add(this);
						this._PID = value.PID;
					}
					else
					{
						this._PID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TBLPRODUCT");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBLRECEIPT_TBLRECEIPTS_DETAIL", Storage="_TBLRECEIPT", ThisKey="RID", OtherKey="RID", IsForeignKey=true)]
		public TBLRECEIPT TBLRECEIPT
		{
			get
			{
				return this._TBLRECEIPT.Entity;
			}
			set
			{
				TBLRECEIPT previousValue = this._TBLRECEIPT.Entity;
				if (((previousValue != value) 
							|| (this._TBLRECEIPT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TBLRECEIPT.Entity = null;
						previousValue.TBLRECEIPTS_DETAILs.Remove(this);
					}
					this._TBLRECEIPT.Entity = value;
					if ((value != null))
					{
						value.TBLRECEIPTS_DETAILs.Add(this);
						this._RID = value.RID;
					}
					else
					{
						this._RID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TBLRECEIPT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class sp_select_productsResult
	{
		
		private int _ID;
		
		private string _ProductName;
		
		private System.Nullable<int> _Quantity;
		
		private System.Nullable<double> _Price;
		
		private System.Nullable<System.DateTime> _AddedDate;
		
		private string _Status;
		
		public sp_select_productsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="NVarChar(100)")]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this._ProductName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
		public System.Nullable<int> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this._Quantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float")]
		public System.Nullable<double> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AddedDate
		{
			get
			{
				return this._AddedDate;
			}
			set
			{
				if ((this._AddedDate != value))
				{
					this._AddedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(8) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
	}
	
	public partial class sp_select_itemResult
	{
		
		private int _ID;
		
		private string _ItemName;
		
		private System.Nullable<int> _Quantity;
		
		private string _Unit;
		
		private System.Nullable<System.DateTime> _AddedDate;
		
		private string _Status;
		
		public sp_select_itemResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemName", DbType="NVarChar(100)")]
		public string ItemName
		{
			get
			{
				return this._ItemName;
			}
			set
			{
				if ((this._ItemName != value))
				{
					this._ItemName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
		public System.Nullable<int> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this._Quantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit", DbType="NVarChar(20)")]
		public string Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				if ((this._Unit != value))
				{
					this._Unit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AddedDate
		{
			get
			{
				return this._AddedDate;
			}
			set
			{
				if ((this._AddedDate != value))
				{
					this._AddedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(8) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
	}
	
	public partial class sp_getLastReceiptIDResult
	{
		
		private System.Nullable<int> _MAX_RID;
		
		public sp_getLastReceiptIDResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAX_RID", DbType="Int")]
		public System.Nullable<int> MAX_RID
		{
			get
			{
				return this._MAX_RID;
			}
			set
			{
				if ((this._MAX_RID != value))
				{
					this._MAX_RID = value;
				}
			}
		}
	}
	
	public partial class sp_getProductsCountResult
	{
		
		private System.Nullable<int> _Product_Number;
		
		public sp_getProductsCountResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_Number", DbType="Int")]
		public System.Nullable<int> Product_Number
		{
			get
			{
				return this._Product_Number;
			}
			set
			{
				if ((this._Product_Number != value))
				{
					this._Product_Number = value;
				}
			}
		}
	}
	
	public partial class sp_selectReceiptsResult
	{
		
		private int _ID;
		
		private System.Nullable<int> _NumberOfItem;
		
		private System.Nullable<double> _TotalDolarPrice;
		
		private System.Nullable<int> _TotalLBPPrice;
		
		private System.Nullable<System.DateTime> _Date;
		
		public sp_selectReceiptsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfItem", DbType="Int")]
		public System.Nullable<int> NumberOfItem
		{
			get
			{
				return this._NumberOfItem;
			}
			set
			{
				if ((this._NumberOfItem != value))
				{
					this._NumberOfItem = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDolarPrice", DbType="Float")]
		public System.Nullable<double> TotalDolarPrice
		{
			get
			{
				return this._TotalDolarPrice;
			}
			set
			{
				if ((this._TotalDolarPrice != value))
				{
					this._TotalDolarPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalLBPPrice", DbType="Int")]
		public System.Nullable<int> TotalLBPPrice
		{
			get
			{
				return this._TotalLBPPrice;
			}
			set
			{
				if ((this._TotalLBPPrice != value))
				{
					this._TotalLBPPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
	}
	
	public partial class sp_selectReceiptsDetailsResult
	{
		
		private string _ProductName;
		
		private System.Nullable<int> _Quantity;
		
		private System.Nullable<double> _DollarPrice;
		
		private System.Nullable<int> _LBPPrice;
		
		private System.Nullable<double> _TotalDolarPrice;
		
		private System.Nullable<int> _TotalLBPPrice;
		
		public sp_selectReceiptsDetailsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="NVarChar(100)")]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this._ProductName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
		public System.Nullable<int> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this._Quantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DollarPrice", DbType="Float")]
		public System.Nullable<double> DollarPrice
		{
			get
			{
				return this._DollarPrice;
			}
			set
			{
				if ((this._DollarPrice != value))
				{
					this._DollarPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LBPPrice", DbType="Int")]
		public System.Nullable<int> LBPPrice
		{
			get
			{
				return this._LBPPrice;
			}
			set
			{
				if ((this._LBPPrice != value))
				{
					this._LBPPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDolarPrice", DbType="Float")]
		public System.Nullable<double> TotalDolarPrice
		{
			get
			{
				return this._TotalDolarPrice;
			}
			set
			{
				if ((this._TotalDolarPrice != value))
				{
					this._TotalDolarPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalLBPPrice", DbType="Int")]
		public System.Nullable<int> TotalLBPPrice
		{
			get
			{
				return this._TotalLBPPrice;
			}
			set
			{
				if ((this._TotalLBPPrice != value))
				{
					this._TotalLBPPrice = value;
				}
			}
		}
	}
	
	public partial class sp_getProductByNameResult
	{
		
		private int _PID;
		
		private string _PNAME;
		
		private System.Nullable<int> _QTE;
		
		private System.Nullable<double> _PRICE;
		
		private System.Nullable<System.DateTime> _ADD_DATE;
		
		private System.Nullable<bool> _ENABLED;
		
		private System.Nullable<bool> _HasQuantity;
		
		public sp_getProductByNameResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PID", DbType="Int NOT NULL")]
		public int PID
		{
			get
			{
				return this._PID;
			}
			set
			{
				if ((this._PID != value))
				{
					this._PID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PNAME", DbType="NVarChar(100)")]
		public string PNAME
		{
			get
			{
				return this._PNAME;
			}
			set
			{
				if ((this._PNAME != value))
				{
					this._PNAME = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTE", DbType="Int")]
		public System.Nullable<int> QTE
		{
			get
			{
				return this._QTE;
			}
			set
			{
				if ((this._QTE != value))
				{
					this._QTE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRICE", DbType="Float")]
		public System.Nullable<double> PRICE
		{
			get
			{
				return this._PRICE;
			}
			set
			{
				if ((this._PRICE != value))
				{
					this._PRICE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ADD_DATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> ADD_DATE
		{
			get
			{
				return this._ADD_DATE;
			}
			set
			{
				if ((this._ADD_DATE != value))
				{
					this._ADD_DATE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ENABLED", DbType="Bit")]
		public System.Nullable<bool> ENABLED
		{
			get
			{
				return this._ENABLED;
			}
			set
			{
				if ((this._ENABLED != value))
				{
					this._ENABLED = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HasQuantity", DbType="Bit")]
		public System.Nullable<bool> HasQuantity
		{
			get
			{
				return this._HasQuantity;
			}
			set
			{
				if ((this._HasQuantity != value))
				{
					this._HasQuantity = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
