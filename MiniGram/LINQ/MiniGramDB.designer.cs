#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MiniGram.LINQ
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="MiniGram")]
	public partial class MiniGramDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTblCategory(TblCategory instance);
    partial void UpdateTblCategory(TblCategory instance);
    partial void DeleteTblCategory(TblCategory instance);
    partial void InsertTblConract(TblConract instance);
    partial void UpdateTblConract(TblConract instance);
    partial void DeleteTblConract(TblConract instance);
    partial void InsertTblCustomerReceipt(TblCustomerReceipt instance);
    partial void UpdateTblCustomerReceipt(TblCustomerReceipt instance);
    partial void DeleteTblCustomerReceipt(TblCustomerReceipt instance);
    partial void InsertTblCustomer(TblCustomer instance);
    partial void UpdateTblCustomer(TblCustomer instance);
    partial void DeleteTblCustomer(TblCustomer instance);
    partial void InsertTblProduct(TblProduct instance);
    partial void UpdateTblProduct(TblProduct instance);
    partial void DeleteTblProduct(TblProduct instance);
    partial void InsertTblSupplierReceipt(TblSupplierReceipt instance);
    partial void UpdateTblSupplierReceipt(TblSupplierReceipt instance);
    partial void DeleteTblSupplierReceipt(TblSupplierReceipt instance);
    partial void InsertTblSupplier(TblSupplier instance);
    partial void UpdateTblSupplier(TblSupplier instance);
    partial void DeleteTblSupplier(TblSupplier instance);
    partial void InsertTblUser(TblUser instance);
    partial void UpdateTblUser(TblUser instance);
    partial void DeleteTblUser(TblUser instance);
    #endregion
		
		public MiniGramDBDataContext() : 
				base(global::MiniGram.Properties.Settings.Default.MiniGramConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MiniGramDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MiniGramDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MiniGramDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MiniGramDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<TblCategory> TblCategories
		{
			get
			{
				return this.GetTable<TblCategory>();
			}
		}
		
		public System.Data.Linq.Table<TblConract> TblConracts
		{
			get
			{
				return this.GetTable<TblConract>();
			}
		}
		
		public System.Data.Linq.Table<TblCustomerReceiptDetail> TblCustomerReceiptDetails
		{
			get
			{
				return this.GetTable<TblCustomerReceiptDetail>();
			}
		}
		
		public System.Data.Linq.Table<TblCustomerReceipt> TblCustomerReceipts
		{
			get
			{
				return this.GetTable<TblCustomerReceipt>();
			}
		}
		
		public System.Data.Linq.Table<TblCustomer> TblCustomers
		{
			get
			{
				return this.GetTable<TblCustomer>();
			}
		}
		
		public System.Data.Linq.Table<TblProduct> TblProducts
		{
			get
			{
				return this.GetTable<TblProduct>();
			}
		}
		
		public System.Data.Linq.Table<TblSupplierReceiptDetail> TblSupplierReceiptDetails
		{
			get
			{
				return this.GetTable<TblSupplierReceiptDetail>();
			}
		}
		
		public System.Data.Linq.Table<TblSupplierReceipt> TblSupplierReceipts
		{
			get
			{
				return this.GetTable<TblSupplierReceipt>();
			}
		}
		
		public System.Data.Linq.Table<TblSupplier> TblSuppliers
		{
			get
			{
				return this.GetTable<TblSupplier>();
			}
		}
		
		public System.Data.Linq.Table<TblSuppWithCat> TblSuppWithCats
		{
			get
			{
				return this.GetTable<TblSuppWithCat>();
			}
		}
		
		public System.Data.Linq.Table<TblUser> TblUsers
		{
			get
			{
				return this.GetTable<TblUser>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_selectAllSuppliers")]
		public ISingleResult<sp_selectAllSuppliersResult> sp_selectAllSuppliers()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<sp_selectAllSuppliersResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_addNewSupplier")]
		public int sp_addNewSupplier([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(20)")] string phone, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string email, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string add1, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(100)")] string add2)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), name, phone, email, add1, add2);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_disableSupplierByID")]
		public int sp_disableSupplierByID([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_enableSupplierByID")]
		public int sp_enableSupplierByID([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.fc_checkSupplierEnabledByID", IsComposable=true)]
		public System.Nullable<bool> fc_checkSupplierEnabledByID([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id)
		{
			return ((System.Nullable<bool>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.fc_CheckLogin", IsComposable=true)]
		public System.Nullable<bool> fc_CheckLogin([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string user, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string pass)
		{
			return ((System.Nullable<bool>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), user, pass).ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TblCategories")]
	public partial class TblCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CATID;
		
		private string _CATNAME;
		
		private System.Nullable<bool> _Deleted;
		
		private System.Nullable<bool> _Enabled;
		
		private EntitySet<TblProduct> _TblProducts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCATIDChanging(int value);
    partial void OnCATIDChanged();
    partial void OnCATNAMEChanging(string value);
    partial void OnCATNAMEChanged();
    partial void OnDeletedChanging(System.Nullable<bool> value);
    partial void OnDeletedChanged();
    partial void OnEnabledChanging(System.Nullable<bool> value);
    partial void OnEnabledChanged();
    #endregion
		
		public TblCategory()
		{
			this._TblProducts = new EntitySet<TblProduct>(new Action<TblProduct>(this.attach_TblProducts), new Action<TblProduct>(this.detach_TblProducts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CATID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CATID
		{
			get
			{
				return this._CATID;
			}
			set
			{
				if ((this._CATID != value))
				{
					this.OnCATIDChanging(value);
					this.SendPropertyChanging();
					this._CATID = value;
					this.SendPropertyChanged("CATID");
					this.OnCATIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CATNAME", DbType="NVarChar(20)")]
		public string CATNAME
		{
			get
			{
				return this._CATNAME;
			}
			set
			{
				if ((this._CATNAME != value))
				{
					this.OnCATNAMEChanging(value);
					this.SendPropertyChanging();
					this._CATNAME = value;
					this.SendPropertyChanged("CATNAME");
					this.OnCATNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit")]
		public System.Nullable<bool> Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enabled", DbType="Bit")]
		public System.Nullable<bool> Enabled
		{
			get
			{
				return this._Enabled;
			}
			set
			{
				if ((this._Enabled != value))
				{
					this.OnEnabledChanging(value);
					this.SendPropertyChanging();
					this._Enabled = value;
					this.SendPropertyChanged("Enabled");
					this.OnEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblCategory_TblProduct", Storage="_TblProducts", ThisKey="CATID", OtherKey="CATID")]
		public EntitySet<TblProduct> TblProducts
		{
			get
			{
				return this._TblProducts;
			}
			set
			{
				this._TblProducts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TblProducts(TblProduct entity)
		{
			this.SendPropertyChanging();
			entity.TblCategory = this;
		}
		
		private void detach_TblProducts(TblProduct entity)
		{
			this.SendPropertyChanging();
			entity.TblCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TblConracts")]
	public partial class TblConract : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CONTID;
		
		private System.Nullable<int> _SID;
		
		private System.Nullable<int> _LengthByMonth;
		
		private System.Nullable<bool> _Deleted;
		
		private System.Nullable<bool> _Enabled;
		
		private EntityRef<TblSupplier> _TblSupplier;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCONTIDChanging(int value);
    partial void OnCONTIDChanged();
    partial void OnSIDChanging(System.Nullable<int> value);
    partial void OnSIDChanged();
    partial void OnLengthByMonthChanging(System.Nullable<int> value);
    partial void OnLengthByMonthChanged();
    partial void OnDeletedChanging(System.Nullable<bool> value);
    partial void OnDeletedChanged();
    partial void OnEnabledChanging(System.Nullable<bool> value);
    partial void OnEnabledChanged();
    #endregion
		
		public TblConract()
		{
			this._TblSupplier = default(EntityRef<TblSupplier>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CONTID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CONTID
		{
			get
			{
				return this._CONTID;
			}
			set
			{
				if ((this._CONTID != value))
				{
					this.OnCONTIDChanging(value);
					this.SendPropertyChanging();
					this._CONTID = value;
					this.SendPropertyChanged("CONTID");
					this.OnCONTIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SID", DbType="Int")]
		public System.Nullable<int> SID
		{
			get
			{
				return this._SID;
			}
			set
			{
				if ((this._SID != value))
				{
					if (this._TblSupplier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSIDChanging(value);
					this.SendPropertyChanging();
					this._SID = value;
					this.SendPropertyChanged("SID");
					this.OnSIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LengthByMonth", DbType="Int")]
		public System.Nullable<int> LengthByMonth
		{
			get
			{
				return this._LengthByMonth;
			}
			set
			{
				if ((this._LengthByMonth != value))
				{
					this.OnLengthByMonthChanging(value);
					this.SendPropertyChanging();
					this._LengthByMonth = value;
					this.SendPropertyChanged("LengthByMonth");
					this.OnLengthByMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit")]
		public System.Nullable<bool> Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enabled", DbType="Bit")]
		public System.Nullable<bool> Enabled
		{
			get
			{
				return this._Enabled;
			}
			set
			{
				if ((this._Enabled != value))
				{
					this.OnEnabledChanging(value);
					this.SendPropertyChanging();
					this._Enabled = value;
					this.SendPropertyChanged("Enabled");
					this.OnEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblSupplier_TblConract", Storage="_TblSupplier", ThisKey="SID", OtherKey="SID", IsForeignKey=true)]
		public TblSupplier TblSupplier
		{
			get
			{
				return this._TblSupplier.Entity;
			}
			set
			{
				TblSupplier previousValue = this._TblSupplier.Entity;
				if (((previousValue != value) 
							|| (this._TblSupplier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblSupplier.Entity = null;
						previousValue.TblConracts.Remove(this);
					}
					this._TblSupplier.Entity = value;
					if ((value != null))
					{
						value.TblConracts.Add(this);
						this._SID = value.SID;
					}
					else
					{
						this._SID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TblSupplier");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TblCustomerReceiptDetails")]
	public partial class TblCustomerReceiptDetail
	{
		
		private System.Nullable<int> _CRID;
		
		private System.Nullable<int> _PID;
		
		private System.Nullable<int> _QTE;
		
		private System.Nullable<double> _PiecePrice;
		
		private System.Nullable<double> _TotalPrice;
		
		public TblCustomerReceiptDetail()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRID", DbType="Int")]
		public System.Nullable<int> CRID
		{
			get
			{
				return this._CRID;
			}
			set
			{
				if ((this._CRID != value))
				{
					this._CRID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PID", DbType="Int")]
		public System.Nullable<int> PID
		{
			get
			{
				return this._PID;
			}
			set
			{
				if ((this._PID != value))
				{
					this._PID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTE", DbType="Int")]
		public System.Nullable<int> QTE
		{
			get
			{
				return this._QTE;
			}
			set
			{
				if ((this._QTE != value))
				{
					this._QTE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PiecePrice", DbType="Float")]
		public System.Nullable<double> PiecePrice
		{
			get
			{
				return this._PiecePrice;
			}
			set
			{
				if ((this._PiecePrice != value))
				{
					this._PiecePrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPrice", DbType="Float")]
		public System.Nullable<double> TotalPrice
		{
			get
			{
				return this._TotalPrice;
			}
			set
			{
				if ((this._TotalPrice != value))
				{
					this._TotalPrice = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TblCustomerReceipts")]
	public partial class TblCustomerReceipt : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CRID;
		
		private System.Nullable<int> _UID;
		
		private System.Nullable<int> _CID;
		
		private System.Nullable<System.DateTime> _CRDate;
		
		private System.Nullable<int> _TotalQte;
		
		private System.Nullable<double> _TotalPrice;
		
		private System.Nullable<bool> _Deleted;
		
		private EntityRef<TblCustomer> _TblCustomer;
		
		private EntityRef<TblUser> _TblUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCRIDChanging(int value);
    partial void OnCRIDChanged();
    partial void OnUIDChanging(System.Nullable<int> value);
    partial void OnUIDChanged();
    partial void OnCIDChanging(System.Nullable<int> value);
    partial void OnCIDChanged();
    partial void OnCRDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCRDateChanged();
    partial void OnTotalQteChanging(System.Nullable<int> value);
    partial void OnTotalQteChanged();
    partial void OnTotalPriceChanging(System.Nullable<double> value);
    partial void OnTotalPriceChanged();
    partial void OnDeletedChanging(System.Nullable<bool> value);
    partial void OnDeletedChanged();
    #endregion
		
		public TblCustomerReceipt()
		{
			this._TblCustomer = default(EntityRef<TblCustomer>);
			this._TblUser = default(EntityRef<TblUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CRID
		{
			get
			{
				return this._CRID;
			}
			set
			{
				if ((this._CRID != value))
				{
					this.OnCRIDChanging(value);
					this.SendPropertyChanging();
					this._CRID = value;
					this.SendPropertyChanged("CRID");
					this.OnCRIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="Int")]
		public System.Nullable<int> UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					if (this._TblUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CID", DbType="Int")]
		public System.Nullable<int> CID
		{
			get
			{
				return this._CID;
			}
			set
			{
				if ((this._CID != value))
				{
					if (this._TblCustomer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCIDChanging(value);
					this.SendPropertyChanging();
					this._CID = value;
					this.SendPropertyChanged("CID");
					this.OnCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CRDate
		{
			get
			{
				return this._CRDate;
			}
			set
			{
				if ((this._CRDate != value))
				{
					this.OnCRDateChanging(value);
					this.SendPropertyChanging();
					this._CRDate = value;
					this.SendPropertyChanged("CRDate");
					this.OnCRDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalQte", DbType="Int")]
		public System.Nullable<int> TotalQte
		{
			get
			{
				return this._TotalQte;
			}
			set
			{
				if ((this._TotalQte != value))
				{
					this.OnTotalQteChanging(value);
					this.SendPropertyChanging();
					this._TotalQte = value;
					this.SendPropertyChanged("TotalQte");
					this.OnTotalQteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPrice", DbType="Float")]
		public System.Nullable<double> TotalPrice
		{
			get
			{
				return this._TotalPrice;
			}
			set
			{
				if ((this._TotalPrice != value))
				{
					this.OnTotalPriceChanging(value);
					this.SendPropertyChanging();
					this._TotalPrice = value;
					this.SendPropertyChanged("TotalPrice");
					this.OnTotalPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit")]
		public System.Nullable<bool> Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblCustomer_TblCustomerReceipt", Storage="_TblCustomer", ThisKey="CID", OtherKey="CID", IsForeignKey=true)]
		public TblCustomer TblCustomer
		{
			get
			{
				return this._TblCustomer.Entity;
			}
			set
			{
				TblCustomer previousValue = this._TblCustomer.Entity;
				if (((previousValue != value) 
							|| (this._TblCustomer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblCustomer.Entity = null;
						previousValue.TblCustomerReceipts.Remove(this);
					}
					this._TblCustomer.Entity = value;
					if ((value != null))
					{
						value.TblCustomerReceipts.Add(this);
						this._CID = value.CID;
					}
					else
					{
						this._CID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TblCustomer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblUser_TblCustomerReceipt", Storage="_TblUser", ThisKey="UID", OtherKey="UID", IsForeignKey=true)]
		public TblUser TblUser
		{
			get
			{
				return this._TblUser.Entity;
			}
			set
			{
				TblUser previousValue = this._TblUser.Entity;
				if (((previousValue != value) 
							|| (this._TblUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblUser.Entity = null;
						previousValue.TblCustomerReceipts.Remove(this);
					}
					this._TblUser.Entity = value;
					if ((value != null))
					{
						value.TblCustomerReceipts.Add(this);
						this._UID = value.UID;
					}
					else
					{
						this._UID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TblUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TblCustomers")]
	public partial class TblCustomer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CID;
		
		private string _FirstName;
		
		private string _FatherName;
		
		private string _LastName;
		
		private string _PhoneNumber;
		
		private string _Email;
		
		private string _Address1;
		
		private string _Address2;
		
		private System.Nullable<bool> _Deleted;
		
		private System.Nullable<bool> _Enabled;
		
		private EntitySet<TblCustomerReceipt> _TblCustomerReceipts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCIDChanging(int value);
    partial void OnCIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnFatherNameChanging(string value);
    partial void OnFatherNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnAddress1Changing(string value);
    partial void OnAddress1Changed();
    partial void OnAddress2Changing(string value);
    partial void OnAddress2Changed();
    partial void OnDeletedChanging(System.Nullable<bool> value);
    partial void OnDeletedChanged();
    partial void OnEnabledChanging(System.Nullable<bool> value);
    partial void OnEnabledChanged();
    #endregion
		
		public TblCustomer()
		{
			this._TblCustomerReceipts = new EntitySet<TblCustomerReceipt>(new Action<TblCustomerReceipt>(this.attach_TblCustomerReceipts), new Action<TblCustomerReceipt>(this.detach_TblCustomerReceipts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CID
		{
			get
			{
				return this._CID;
			}
			set
			{
				if ((this._CID != value))
				{
					this.OnCIDChanging(value);
					this.SendPropertyChanging();
					this._CID = value;
					this.SendPropertyChanged("CID");
					this.OnCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(20)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FatherName", DbType="NVarChar(20)")]
		public string FatherName
		{
			get
			{
				return this._FatherName;
			}
			set
			{
				if ((this._FatherName != value))
				{
					this.OnFatherNameChanging(value);
					this.SendPropertyChanging();
					this._FatherName = value;
					this.SendPropertyChanged("FatherName");
					this.OnFatherNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(20)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(20)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address1", DbType="NVarChar(100)")]
		public string Address1
		{
			get
			{
				return this._Address1;
			}
			set
			{
				if ((this._Address1 != value))
				{
					this.OnAddress1Changing(value);
					this.SendPropertyChanging();
					this._Address1 = value;
					this.SendPropertyChanged("Address1");
					this.OnAddress1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address2", DbType="NVarChar(100)")]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this.OnAddress2Changing(value);
					this.SendPropertyChanging();
					this._Address2 = value;
					this.SendPropertyChanged("Address2");
					this.OnAddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit")]
		public System.Nullable<bool> Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enabled", DbType="Bit")]
		public System.Nullable<bool> Enabled
		{
			get
			{
				return this._Enabled;
			}
			set
			{
				if ((this._Enabled != value))
				{
					this.OnEnabledChanging(value);
					this.SendPropertyChanging();
					this._Enabled = value;
					this.SendPropertyChanged("Enabled");
					this.OnEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblCustomer_TblCustomerReceipt", Storage="_TblCustomerReceipts", ThisKey="CID", OtherKey="CID")]
		public EntitySet<TblCustomerReceipt> TblCustomerReceipts
		{
			get
			{
				return this._TblCustomerReceipts;
			}
			set
			{
				this._TblCustomerReceipts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TblCustomerReceipts(TblCustomerReceipt entity)
		{
			this.SendPropertyChanging();
			entity.TblCustomer = this;
		}
		
		private void detach_TblCustomerReceipts(TblCustomerReceipt entity)
		{
			this.SendPropertyChanging();
			entity.TblCustomer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TblProducts")]
	public partial class TblProduct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PID;
		
		private string _ProductName;
		
		private System.Nullable<int> _CATID;
		
		private System.Nullable<int> _TotalQte;
		
		private System.Nullable<bool> _Deleted;
		
		private System.Nullable<bool> _Enabled;
		
		private EntityRef<TblCategory> _TblCategory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPIDChanging(int value);
    partial void OnPIDChanged();
    partial void OnProductNameChanging(string value);
    partial void OnProductNameChanged();
    partial void OnCATIDChanging(System.Nullable<int> value);
    partial void OnCATIDChanged();
    partial void OnTotalQteChanging(System.Nullable<int> value);
    partial void OnTotalQteChanged();
    partial void OnDeletedChanging(System.Nullable<bool> value);
    partial void OnDeletedChanged();
    partial void OnEnabledChanging(System.Nullable<bool> value);
    partial void OnEnabledChanged();
    #endregion
		
		public TblProduct()
		{
			this._TblCategory = default(EntityRef<TblCategory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PID
		{
			get
			{
				return this._PID;
			}
			set
			{
				if ((this._PID != value))
				{
					this.OnPIDChanging(value);
					this.SendPropertyChanging();
					this._PID = value;
					this.SendPropertyChanged("PID");
					this.OnPIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="NVarChar(100)")]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this.OnProductNameChanging(value);
					this.SendPropertyChanging();
					this._ProductName = value;
					this.SendPropertyChanged("ProductName");
					this.OnProductNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CATID", DbType="Int")]
		public System.Nullable<int> CATID
		{
			get
			{
				return this._CATID;
			}
			set
			{
				if ((this._CATID != value))
				{
					if (this._TblCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCATIDChanging(value);
					this.SendPropertyChanging();
					this._CATID = value;
					this.SendPropertyChanged("CATID");
					this.OnCATIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalQte", DbType="Int")]
		public System.Nullable<int> TotalQte
		{
			get
			{
				return this._TotalQte;
			}
			set
			{
				if ((this._TotalQte != value))
				{
					this.OnTotalQteChanging(value);
					this.SendPropertyChanging();
					this._TotalQte = value;
					this.SendPropertyChanged("TotalQte");
					this.OnTotalQteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit")]
		public System.Nullable<bool> Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enabled", DbType="Bit")]
		public System.Nullable<bool> Enabled
		{
			get
			{
				return this._Enabled;
			}
			set
			{
				if ((this._Enabled != value))
				{
					this.OnEnabledChanging(value);
					this.SendPropertyChanging();
					this._Enabled = value;
					this.SendPropertyChanged("Enabled");
					this.OnEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblCategory_TblProduct", Storage="_TblCategory", ThisKey="CATID", OtherKey="CATID", IsForeignKey=true)]
		public TblCategory TblCategory
		{
			get
			{
				return this._TblCategory.Entity;
			}
			set
			{
				TblCategory previousValue = this._TblCategory.Entity;
				if (((previousValue != value) 
							|| (this._TblCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblCategory.Entity = null;
						previousValue.TblProducts.Remove(this);
					}
					this._TblCategory.Entity = value;
					if ((value != null))
					{
						value.TblProducts.Add(this);
						this._CATID = value.CATID;
					}
					else
					{
						this._CATID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TblCategory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TblSupplierReceiptDetails")]
	public partial class TblSupplierReceiptDetail
	{
		
		private System.Nullable<int> _SRID;
		
		private System.Nullable<int> _PID;
		
		private System.Nullable<int> _QTE;
		
		private System.Nullable<double> _PiecePrice;
		
		private System.Nullable<double> _TotalPrice;
		
		public TblSupplierReceiptDetail()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SRID", DbType="Int")]
		public System.Nullable<int> SRID
		{
			get
			{
				return this._SRID;
			}
			set
			{
				if ((this._SRID != value))
				{
					this._SRID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PID", DbType="Int")]
		public System.Nullable<int> PID
		{
			get
			{
				return this._PID;
			}
			set
			{
				if ((this._PID != value))
				{
					this._PID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QTE", DbType="Int")]
		public System.Nullable<int> QTE
		{
			get
			{
				return this._QTE;
			}
			set
			{
				if ((this._QTE != value))
				{
					this._QTE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PiecePrice", DbType="Float")]
		public System.Nullable<double> PiecePrice
		{
			get
			{
				return this._PiecePrice;
			}
			set
			{
				if ((this._PiecePrice != value))
				{
					this._PiecePrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPrice", DbType="Float")]
		public System.Nullable<double> TotalPrice
		{
			get
			{
				return this._TotalPrice;
			}
			set
			{
				if ((this._TotalPrice != value))
				{
					this._TotalPrice = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TblSupplierReceipts")]
	public partial class TblSupplierReceipt : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SRID;
		
		private System.Nullable<int> _UID;
		
		private System.Nullable<int> _SID;
		
		private System.Nullable<System.DateTime> _SRDate;
		
		private System.Nullable<int> _TotalQte;
		
		private System.Nullable<double> _TotalPrice;
		
		private System.Nullable<bool> _Deleted;
		
		private EntityRef<TblSupplier> _TblSupplier;
		
		private EntityRef<TblUser> _TblUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSRIDChanging(int value);
    partial void OnSRIDChanged();
    partial void OnUIDChanging(System.Nullable<int> value);
    partial void OnUIDChanged();
    partial void OnSIDChanging(System.Nullable<int> value);
    partial void OnSIDChanged();
    partial void OnSRDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSRDateChanged();
    partial void OnTotalQteChanging(System.Nullable<int> value);
    partial void OnTotalQteChanged();
    partial void OnTotalPriceChanging(System.Nullable<double> value);
    partial void OnTotalPriceChanged();
    partial void OnDeletedChanging(System.Nullable<bool> value);
    partial void OnDeletedChanged();
    #endregion
		
		public TblSupplierReceipt()
		{
			this._TblSupplier = default(EntityRef<TblSupplier>);
			this._TblUser = default(EntityRef<TblUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SRID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SRID
		{
			get
			{
				return this._SRID;
			}
			set
			{
				if ((this._SRID != value))
				{
					this.OnSRIDChanging(value);
					this.SendPropertyChanging();
					this._SRID = value;
					this.SendPropertyChanged("SRID");
					this.OnSRIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="Int")]
		public System.Nullable<int> UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					if (this._TblUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SID", DbType="Int")]
		public System.Nullable<int> SID
		{
			get
			{
				return this._SID;
			}
			set
			{
				if ((this._SID != value))
				{
					if (this._TblSupplier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSIDChanging(value);
					this.SendPropertyChanging();
					this._SID = value;
					this.SendPropertyChanged("SID");
					this.OnSIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SRDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SRDate
		{
			get
			{
				return this._SRDate;
			}
			set
			{
				if ((this._SRDate != value))
				{
					this.OnSRDateChanging(value);
					this.SendPropertyChanging();
					this._SRDate = value;
					this.SendPropertyChanged("SRDate");
					this.OnSRDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalQte", DbType="Int")]
		public System.Nullable<int> TotalQte
		{
			get
			{
				return this._TotalQte;
			}
			set
			{
				if ((this._TotalQte != value))
				{
					this.OnTotalQteChanging(value);
					this.SendPropertyChanging();
					this._TotalQte = value;
					this.SendPropertyChanged("TotalQte");
					this.OnTotalQteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPrice", DbType="Float")]
		public System.Nullable<double> TotalPrice
		{
			get
			{
				return this._TotalPrice;
			}
			set
			{
				if ((this._TotalPrice != value))
				{
					this.OnTotalPriceChanging(value);
					this.SendPropertyChanging();
					this._TotalPrice = value;
					this.SendPropertyChanged("TotalPrice");
					this.OnTotalPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit")]
		public System.Nullable<bool> Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblSupplier_TblSupplierReceipt", Storage="_TblSupplier", ThisKey="SID", OtherKey="SID", IsForeignKey=true)]
		public TblSupplier TblSupplier
		{
			get
			{
				return this._TblSupplier.Entity;
			}
			set
			{
				TblSupplier previousValue = this._TblSupplier.Entity;
				if (((previousValue != value) 
							|| (this._TblSupplier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblSupplier.Entity = null;
						previousValue.TblSupplierReceipts.Remove(this);
					}
					this._TblSupplier.Entity = value;
					if ((value != null))
					{
						value.TblSupplierReceipts.Add(this);
						this._SID = value.SID;
					}
					else
					{
						this._SID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TblSupplier");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblUser_TblSupplierReceipt", Storage="_TblUser", ThisKey="UID", OtherKey="UID", IsForeignKey=true)]
		public TblUser TblUser
		{
			get
			{
				return this._TblUser.Entity;
			}
			set
			{
				TblUser previousValue = this._TblUser.Entity;
				if (((previousValue != value) 
							|| (this._TblUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TblUser.Entity = null;
						previousValue.TblSupplierReceipts.Remove(this);
					}
					this._TblUser.Entity = value;
					if ((value != null))
					{
						value.TblSupplierReceipts.Add(this);
						this._UID = value.UID;
					}
					else
					{
						this._UID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TblUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TblSuppliers")]
	public partial class TblSupplier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SID;
		
		private string _SupplierName;
		
		private string _PhoneNumber;
		
		private string _Email;
		
		private string _Address1;
		
		private string _Address2;
		
		private System.Nullable<bool> _Deleted;
		
		private System.Nullable<bool> _Enabled;
		
		private EntitySet<TblConract> _TblConracts;
		
		private EntitySet<TblSupplierReceipt> _TblSupplierReceipts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSIDChanging(int value);
    partial void OnSIDChanged();
    partial void OnSupplierNameChanging(string value);
    partial void OnSupplierNameChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnAddress1Changing(string value);
    partial void OnAddress1Changed();
    partial void OnAddress2Changing(string value);
    partial void OnAddress2Changed();
    partial void OnDeletedChanging(System.Nullable<bool> value);
    partial void OnDeletedChanged();
    partial void OnEnabledChanging(System.Nullable<bool> value);
    partial void OnEnabledChanged();
    #endregion
		
		public TblSupplier()
		{
			this._TblConracts = new EntitySet<TblConract>(new Action<TblConract>(this.attach_TblConracts), new Action<TblConract>(this.detach_TblConracts));
			this._TblSupplierReceipts = new EntitySet<TblSupplierReceipt>(new Action<TblSupplierReceipt>(this.attach_TblSupplierReceipts), new Action<TblSupplierReceipt>(this.detach_TblSupplierReceipts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SID
		{
			get
			{
				return this._SID;
			}
			set
			{
				if ((this._SID != value))
				{
					this.OnSIDChanging(value);
					this.SendPropertyChanging();
					this._SID = value;
					this.SendPropertyChanged("SID");
					this.OnSIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierName", DbType="NVarChar(50)")]
		public string SupplierName
		{
			get
			{
				return this._SupplierName;
			}
			set
			{
				if ((this._SupplierName != value))
				{
					this.OnSupplierNameChanging(value);
					this.SendPropertyChanging();
					this._SupplierName = value;
					this.SendPropertyChanged("SupplierName");
					this.OnSupplierNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(20)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address1", DbType="NVarChar(100)")]
		public string Address1
		{
			get
			{
				return this._Address1;
			}
			set
			{
				if ((this._Address1 != value))
				{
					this.OnAddress1Changing(value);
					this.SendPropertyChanging();
					this._Address1 = value;
					this.SendPropertyChanged("Address1");
					this.OnAddress1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address2", DbType="NVarChar(100)")]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this.OnAddress2Changing(value);
					this.SendPropertyChanging();
					this._Address2 = value;
					this.SendPropertyChanged("Address2");
					this.OnAddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit")]
		public System.Nullable<bool> Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enabled", DbType="Bit")]
		public System.Nullable<bool> Enabled
		{
			get
			{
				return this._Enabled;
			}
			set
			{
				if ((this._Enabled != value))
				{
					this.OnEnabledChanging(value);
					this.SendPropertyChanging();
					this._Enabled = value;
					this.SendPropertyChanged("Enabled");
					this.OnEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblSupplier_TblConract", Storage="_TblConracts", ThisKey="SID", OtherKey="SID")]
		public EntitySet<TblConract> TblConracts
		{
			get
			{
				return this._TblConracts;
			}
			set
			{
				this._TblConracts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblSupplier_TblSupplierReceipt", Storage="_TblSupplierReceipts", ThisKey="SID", OtherKey="SID")]
		public EntitySet<TblSupplierReceipt> TblSupplierReceipts
		{
			get
			{
				return this._TblSupplierReceipts;
			}
			set
			{
				this._TblSupplierReceipts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TblConracts(TblConract entity)
		{
			this.SendPropertyChanging();
			entity.TblSupplier = this;
		}
		
		private void detach_TblConracts(TblConract entity)
		{
			this.SendPropertyChanging();
			entity.TblSupplier = null;
		}
		
		private void attach_TblSupplierReceipts(TblSupplierReceipt entity)
		{
			this.SendPropertyChanging();
			entity.TblSupplier = this;
		}
		
		private void detach_TblSupplierReceipts(TblSupplierReceipt entity)
		{
			this.SendPropertyChanging();
			entity.TblSupplier = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TblSuppWithCat")]
	public partial class TblSuppWithCat
	{
		
		private System.Nullable<int> _SID;
		
		private System.Nullable<int> _CATID;
		
		public TblSuppWithCat()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SID", DbType="Int")]
		public System.Nullable<int> SID
		{
			get
			{
				return this._SID;
			}
			set
			{
				if ((this._SID != value))
				{
					this._SID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CATID", DbType="Int")]
		public System.Nullable<int> CATID
		{
			get
			{
				return this._CATID;
			}
			set
			{
				if ((this._CATID != value))
				{
					this._CATID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TblUsers")]
	public partial class TblUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UID;
		
		private string _Username;
		
		private string _Password;
		
		private System.Nullable<bool> _Deleted;
		
		private System.Nullable<bool> _Enabled;
		
		private EntitySet<TblCustomerReceipt> _TblCustomerReceipts;
		
		private EntitySet<TblSupplierReceipt> _TblSupplierReceipts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUIDChanging(int value);
    partial void OnUIDChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnDeletedChanging(System.Nullable<bool> value);
    partial void OnDeletedChanged();
    partial void OnEnabledChanging(System.Nullable<bool> value);
    partial void OnEnabledChanged();
    #endregion
		
		public TblUser()
		{
			this._TblCustomerReceipts = new EntitySet<TblCustomerReceipt>(new Action<TblCustomerReceipt>(this.attach_TblCustomerReceipts), new Action<TblCustomerReceipt>(this.detach_TblCustomerReceipts));
			this._TblSupplierReceipts = new EntitySet<TblSupplierReceipt>(new Action<TblSupplierReceipt>(this.attach_TblSupplierReceipts), new Action<TblSupplierReceipt>(this.detach_TblSupplierReceipts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UID
		{
			get
			{
				return this._UID;
			}
			set
			{
				if ((this._UID != value))
				{
					this.OnUIDChanging(value);
					this.SendPropertyChanging();
					this._UID = value;
					this.SendPropertyChanged("UID");
					this.OnUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(20)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deleted", DbType="Bit")]
		public System.Nullable<bool> Deleted
		{
			get
			{
				return this._Deleted;
			}
			set
			{
				if ((this._Deleted != value))
				{
					this.OnDeletedChanging(value);
					this.SendPropertyChanging();
					this._Deleted = value;
					this.SendPropertyChanged("Deleted");
					this.OnDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enabled", DbType="Bit")]
		public System.Nullable<bool> Enabled
		{
			get
			{
				return this._Enabled;
			}
			set
			{
				if ((this._Enabled != value))
				{
					this.OnEnabledChanging(value);
					this.SendPropertyChanging();
					this._Enabled = value;
					this.SendPropertyChanged("Enabled");
					this.OnEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblUser_TblCustomerReceipt", Storage="_TblCustomerReceipts", ThisKey="UID", OtherKey="UID")]
		public EntitySet<TblCustomerReceipt> TblCustomerReceipts
		{
			get
			{
				return this._TblCustomerReceipts;
			}
			set
			{
				this._TblCustomerReceipts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TblUser_TblSupplierReceipt", Storage="_TblSupplierReceipts", ThisKey="UID", OtherKey="UID")]
		public EntitySet<TblSupplierReceipt> TblSupplierReceipts
		{
			get
			{
				return this._TblSupplierReceipts;
			}
			set
			{
				this._TblSupplierReceipts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TblCustomerReceipts(TblCustomerReceipt entity)
		{
			this.SendPropertyChanging();
			entity.TblUser = this;
		}
		
		private void detach_TblCustomerReceipts(TblCustomerReceipt entity)
		{
			this.SendPropertyChanging();
			entity.TblUser = null;
		}
		
		private void attach_TblSupplierReceipts(TblSupplierReceipt entity)
		{
			this.SendPropertyChanging();
			entity.TblUser = this;
		}
		
		private void detach_TblSupplierReceipts(TblSupplierReceipt entity)
		{
			this.SendPropertyChanging();
			entity.TblUser = null;
		}
	}
	
	public partial class sp_selectAllSuppliersResult
	{
		
		private int _SID;
		
		private string _SupplierName;
		
		private string _PhoneNumber;
		
		private string _Email;
		
		private string _Address1;
		
		private string _Address2;
		
		public sp_selectAllSuppliersResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SID", DbType="Int NOT NULL")]
		public int SID
		{
			get
			{
				return this._SID;
			}
			set
			{
				if ((this._SID != value))
				{
					this._SID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierName", DbType="NVarChar(50)")]
		public string SupplierName
		{
			get
			{
				return this._SupplierName;
			}
			set
			{
				if ((this._SupplierName != value))
				{
					this._SupplierName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(20)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this._PhoneNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address1", DbType="NVarChar(100)")]
		public string Address1
		{
			get
			{
				return this._Address1;
			}
			set
			{
				if ((this._Address1 != value))
				{
					this._Address1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address2", DbType="NVarChar(100)")]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this._Address2 = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
